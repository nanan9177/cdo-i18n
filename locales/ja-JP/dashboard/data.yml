"ja":
  data:
    script:
      name:
        20-hour:
          desc: "K-8(アメリカでの中学校）ではコンピューターサイエンスコースが紹介されている。"
          Unplug1: "ステージ 1"
          Maze: "ステージ 2"
          Unplug2: "ステージ 3"
          Unplug3: "ステージ 4"
          Artist: "ステージ 5"
          Unplug4: "ステージ 6"
          Artist2: "ステージ７"
          Unplug5: "ステージ８"
          Farmer: "ステージ 9"
          Unplug6: "ステージ 10"
          Artist3: "ステージ11"
          Unplug7: |
            ステージ12
            
            
          Farmer2: |
            ステージ13
            
            
          Unplug8: |
            ステージ14
            
          Artist4: |
            ステージ15
            
          Unplug9: "ステージ16"
          Farmer3: "ステージ17"
          Unplug10: "ステージ18"
          Artist5: "ステージ19"
          Unplug11: "ステージ20"
        Hour of Code:
          desc: "コードの時間(Hour of code)"
          Maze: "ステージ 1"
        Edit Code:
          desc: "コードを編集します。"
          MazeEC: "ステージ 1"
    game:
      name:
        Unplug1: "コンピューター サイエンス入門"
        Maze: "迷路"
        Unplug2: "コンピュテーショナル・シンキング（コンピューターの様に考える）"
        Unplug3: "グラフ用紙のプログラミング"
        Artist: "アーティスト"
        Unplug4: "アルゴリズム"
        Artist2: "アーティスト 2"
        Unplug5: "Functions"
        Farmer: "農民"
        Unplug6: "条件"
        Artist3: "アーティスト 3"
        Unplug7: |
          作曲する
          
        Farmer2: "農民 2"
        Unplug8: "抽象化"
        Artist4: "アーティスト 4"
        Unplug9: "プログラミングをリレーします。"
        Farmer3: "農民 3"
        Unplug10: "インターネット"
        Artist5: "アーティスト 5"
        Unplug11: "ラップアップ"
        MazeEC: "迷路"
    trophy:
      name:
        Bronze: "銅"
        Silver: |
          銀
          
        Gold: "金"
    concept:
      description:
        sequence: "連続"
        if: |
          if ブロック
          
        if_else: "If else ブロック"
        loop_times: "Timesブロックを繰り返す"
        loop_until: "untilブロックを繰り返す"
        loop_while: "Whileブロック"
        loop_for: "Counterブロック"
        function: "関数"
        parameters: "パラメーターを持つ関数"
    level:
      instructions:
        maze_2_2: "いたずら豚を捕まえてくれますか？「進む」のブロックをまとめていくつかを積み上げ、そして「プログラムの実行」のキーを押して私が豚を捕まえられるよう助けてください。"
        maze_2_1: "この豚は私の羽をしわくちゃにします。私が彼を見つけられるよう助けて ！"
        maze_2_2_5: "パスをトレースして、おばかなブタのところへ案内してください。TNT を避けないと、羽が飛びます ！"
        maze_2_3: "緑の悪る者に私を案内して ！(TNT に気を付けてね)"
        maze_2_4: "落ち着いて、そして悪いブタを見つけるのを助けてください。でないと私は怒るかもよ！"
        maze_2_5: "ブロックを２つだけ使って、みどりのブタへたどり着ける方法があります。どうやるか解けますか？"
        maze_2_6: "ブロックを３つだけ使って私を緑の侵入者のところへ行かせてください。"
        maze_2_7: "一番少ない数のブロックを使ってこの悪いブタを追放するのを手伝ってください。1 つ以上の「繰り返し」ブロックを使用してください。"
        maze_2_8: "次の３つのブロック： 移動、移動、曲がるを中に入れた「繰り返し」ブロックでこの問題を解決してください。"
        maze_2_9: "Ok, 新しい「まで繰り返し(Repeat until)」ブロックを試してください。私がムカつくブタに着くまで繰り返されます。"
        maze_2_10: "Ok、では 最後の１つになった練習です - これを 4 ブロックをだけ使って解決できますか？"
        maze_2_11: "親愛なる人。私ゾンビ。私は空腹。。。ヒマワリを取らないといけない。5つの ブロックだけで私をそこまで連れて行ける事ができますか？"
        maze_2_12: "Ok、 これは似ていますが、ちょっと違います。5つの ブロックだけでできますか？"
        maze_2_13: |
          新しい"if"ブロックを使っていつ曲がるかを私に決めさせてください。ヒント: あともう１つのブロックが必要です、でも私たちがどう設定しているかを学んでください、そうしたら次回はあなたができるようになります。
          
        maze_2_14: |
          Ok,　これは最後のパズルと同じです、でもどうやって"if"ブロックと"repeat"ブロックを一緒に使ったかをもう一度思い出す必要があります。
          
          
        maze_2_15: |
          ひまわりが欲しい！一番少ない数の"if"ブロックを使ってそこまで私を連れて行ってください
          
          
          
        maze_2_16: "Ok,練習のためもう一度やりましょう ーそれほど違いはないけれど、 チャンパー達に気をつけて！"
        maze_2_17: |
          "If-else"ブロックは条件をチェックし、そして１つの事もしくは別の事をします。サンフラワーを私にゲットさせるためにこの新しいブロックを試してください。
          
        maze_2_18: '"if-else"ブロックをもう一度練習するよ、 最初のトライでそれを正しくゲットできる？'
        maze_2_19: "ブロックをあと3つ追加してこの難しい迷路を解決する手助けをしてくれますか？もしそれができれば、長さに関係なくどんなカーブした道でも歩く事ができるようになります。"
        turtle_1_1: |
          こんにちは、私はアーティストです。あなたはどんなものでも描かせられるコードが書く事ができます。いくつかのブロックを使って絵の中にあるグレイの線の上にそって私に描写をさせてください。
          
        turtle_1_2: "正方形を描きます。注: 新しい「色の設定」ブロックで選択することにより好きな色を使用してください。"
        turtle_1_3: "ブロックを３つだけ使用して正方形を作成します。"
        turtle_1_4: |
          毎回違う色を選択してくれる"random color"オプションをつかって、色の異なる側面をもつ三角形を描きましょう。ヒント：回転ブロックの回数をクリックして、どのくらいの距離で曲がるかを考慮して解決するひつようがあります。
          
          
        turtle_1_5: "今、練習のために、三角形を描いて、そして封筒になるように正方形を描きます。"
        turtle_1_6: |
          どうやって、この三角形と正方形を描けるか解決できますか？ヒント：三角形を最初に、そして正方形を各前にどのくらい曲がればいいか考える。
          
          
        turtle_1_7: "Ok、もう少し難しくしてみましょう  -もしこれらの緑のメガネを描けるか試しましょう。正方形はそれぞれの側面が100 ピクセルで 50 ピクセル離れています。緑色で描画くのを忘れないでね ！"
        turtle_1_8: "Ok,もしこのコードを実行 (または「実行する」それをしようとするキーを押します)したらら 何が起こるかを考えます。その後、描画が完了するように何回も繰り返します。色は毎回異なるようになります。"
        turtle_1_9: |
          円を描くのにどの数字がクエスチョンマーク（疑問符）に置き換えられるか考えられますか？
          
        turtle_1_10: |
          
          よくできたね！あなたが描きたいものを何でもいいから描いてください。いくつかの楽しいアイデア： スティック図、雪片、またはスパイラル。また、新しい「設定幅」ブロックを試みてください。楽しんでね！
        turtle_4_1: "ブロック３つだけ （100 ピクセルのエッジ) で三角形を描くことができますか？ヒント:「リピート」のブロックを使用します。"
        turtle_4_2: |
          このパズルを完了するために ブロックを１つ追加してみてください。ヒント: 2 つの同一の三角形を描画するブロックを提供しておきましたので、"turn"を間に置き、どのくらいで曲がるかは決める必要があります。
          
        turtle_4_3: "Ok、これはあなたが書いた単一の三角形を描画するコードです。かわいい花を作るために「繰り返し」と「ターン」のブロックを追加できますか？"
        turtle_4_4: "これらは前回のパズルと同じコードです、でも各三角形を描画した後に36度だけ回転させました。何回これを繰り返す必要があるのでしょうか？(ヒント: 360 度回転した後は完全な円ができます。）"
        turtle_4_5: "前回のパズルと同じコードです、ただ回転を36回繰り返しました。回転角度は何度にすればよいですか？(ヒント: 360 度回転すると描画は完全な円になります。）"
        turtle_4_6: "ブロックを３つだけ使用して、20 ピクセルのエッジを持つ正方形を描くことができますか？"
        turtle_4_7: "Here's the code for drawing the square from last puzzle. Can you repeat it to draw 10 adjacent squares like a ladder? Hint: you only need 2 more blocks."
        turtle_4_8: "Here's the solution to the previous puzzle. Can you add just 2 more blocks to complete the drawing?"
        turtle_4_9: "Here's the solution to the previous puzzle. How many degrees should you turn to complete the drawing? (You probably need to guess a few times)"
        turtle_4_10: "Here's the solution to the previous puzzle. How many times should you repeat to complete the drawing?"
        turtle_4_11: 'Try changing the numbers in the "turn" and "repeat" blocks to make different patterns. Or, experiment changing the rest of the code to draw anything you want.'
        maze_karel_1_1: |-
          Hi, I'm a farmer. I need your help to flatten the field on my farm so it's ready for planting. Move me to the pile of dirt and use the "remove" block to remove it.
        maze_karel_1_2: 'Next, move me to the hole and fill it with TWO shovelfuls of dirt, using the "fill" block.'
        maze_karel_1_3: "Move me to the pile of dirt and tell me how many shovelfuls to remove using as few blocks as possible."
        maze_karel_1_4: "Can you help me remove all four piles of dirt? Hint: use a repeat block if you can."
        maze_karel_1_5: 'Help me fill in all these holes with 5 shovelfuls of dirt. Hint: you can put a "repeat" block inside the "while" block.'
        maze_karel_1_6: |-
          Remove all the piles of dirt, using as few blocks as possible. The new options in the dropdown menu on the "while" block tell me if I'm standing on a pile or a hole.
        maze_karel_1_7: "Wow, I found a really deep hole! I don't know how many shovelfuls of dirt it needs. Can you write a program that fills it until the ground is even?"
        maze_karel_1_8: "Help me fill in the hole at the end of the field, using as few blocks as possible."
        maze_karel_1_9: 'Make me remove all these piles of dirt. Try to use as few blocks as possible. Hint: try using a "while" block.'
        maze_karel_1_10: "I'm working late, so it's dark out, and I can't tell how large the piles are. Now I don't have all the options I used to have on the while block. Move me along the field, and if there is a pile, remove it."
        maze_karel_1_11: |-
          It's still dark outside. Move me along the field. If there is a pile, remove it, and if there is a hole, fill it in. Hint: use the dropdown menu of options on the "if" block.
        turtle_2_1: "Hello. Me zombie artist. Me love drawing! Help me draw a square in a special color. Important note: you have all the same blocks but they've now been arranged in categories."
        turtle_2_2: 'Welcome to using functions, which let you define new blocks! Try the new "draw a square" block, found in the "Functions" category, to draw a small 50x50 green square.'
        turtle_2_3: 'Use the "repeat" block (in the "Loops" category) to draw 3 squares of size 100, each 120 degrees apart. And do it in 3 different, random colors.'
        turtle_2_4: "Now we're going to get fancy. Change the code to draw 36 squares, 100 pixels wide, and each 10 degrees apart. Hint: you may want to use the slider to make me go faster."
        turtle_2_5: |-
          Draw squares with sides of 50, 60, 70, 80, and 90 pixels.  You'll need to use the "draw a square" function five times.
        turtle_2_6: |-
          Ok, this program will use a counter, to draw the same squares as last time. You want the square to be the same size as the counter, so use the "counter" block. Hint: It's in the Variables category.
        turtle_2_7: |-
          Here's a program to draw a spiral, but the blocks are disabled so they won't run. Make a new program using a "count with" block (in the Loops category) and "counter" block (in the Variables category) to draw the same spiral.
        turtle_2_7_5: |-
          There's a new "draw a snowman" function (in the Functions category). Draw two snowmen, of height 250 and 100.
        turtle_2_8: |-
          This one's a bit tricky. Use the "draw a snowman" function and the new "jump forward" block (in the Actions category). Draw 3 snowmen in different colors, 100 pixels apart.
        turtle_2_9: 'Use a "count with" loop to draw a family of snowmen with heights of 110, 100, 90, 80, and 70. The snowmen should all be 60 pixels apart.'
        turtle_2_10: "Here's some code to try experimenting with different spirals.  What happens if you change the turn amount? Or set a random color in the loop?  Draw anything you like."
        maze_karel_2_1: "Try using the blocks to help me remove all the piles and fill in all the holes on the ground. Try to use loops instead of using too many blocks. Hint: you can put a loop inside another loop."
        maze_karel_2_2: |-
          We've defined our own block called "fill 5", which is now in the Functions category. Use it to help me fill in this hole.
        maze_karel_2_3: |-
          Use the new "fill 5" function block to make me fill in all the holes. You'll have to drag out the "fill 5" block out from the Functions category.
        maze_karel_2_4: "Define a new function that removes 7 shovelfuls. Then use it to write a program that helps me remove all the piles."
        maze_karel_2_5: "Create a new function that removes 6 shovelfuls from a pile, and use it to help me level out all the piles."
        maze_karel_2_6: 'Use two new functions, "fill 8" and "remove 8", to help me level out the pile and fill in the hole.'
        maze_karel_2_7: "There's a cow in my field! Write a new function that helps me avoid the cow and remove the pile. Put all your blocks inside the new function."
        maze_karel_2_8: 'Use this new function, "avoid the cow and remove 1", to help me remove all the piles.'
        maze_karel_2_9: "Ok, here's a function that removes 4 different piles of dirt in a vertical column. Try putting this function inside a loop, so that you remove all the piles of dirt using only a few new blocks."
        maze_karel_2_10: "Move me across the field, and use these two functions to help me remove all the piles and fill all the holes."
        turtle_3_1: |-
          This puzzle shows you how the "draw a square" and "draw a circle" functions are defined.  Defining a function doesn't run its blocks.  You have to pull out the "draw a square" block to actually draw a square.
        turtle_3_2: 'Using the "draw a square" function as an example, create a "draw a triangle" function and use it.'
        turtle_3_3: "Draw triangular fences around the cats and a square fence around the cow.  Tip: test the program as you go along."
        turtle_3_4: 'See if you can figure out how to use "draw a square" and "draw a triangle" (and some other blocks) to draw a house around the lion.'
        turtle_3_5: 'Now create a new "draw a house" function and use it to house two cats. Hint: create a new function using the "do something" block, and type your own text to name the block.'
        turtle_3_6: 'Using "draw a square" as an example, add an input named "length" to "draw a triangle". Then, draw triangles in different sizes. (Hint: click the star to add an input to a function)'
        turtle_3_7: 'Add an input named "length" to "draw a house" and build a big house for the elephant (with edges 150 pixels long)'
        turtle_3_8: 'Here are all of the blocks from the previous puzzle.  Modify "draw a house" so I end up at the bottom right corner after drawing a new house. Use this modified function to draw three houses.'
        turtle_3_9: 'Can you re-create the "draw a house" function without help? Try it, and then draw a row of houses.'
        turtle_3_10: "You've learned a lot! Now use it to draw whatever you want. Try to draw a star, or a spiral, or a fancy snowflake."
        maze_karel_debug_seq_1: "Welcome to debugging! My code doesn't work right. Can you spot the problem and fix it so that I can get my field flat and ready for planting?"
        maze_karel_debug_seq_2: "What's wrong with this program? How should you fix it so I can remove that pile?"
        maze_karel_debug_repeat: "De-bug this program for me so my field will be nice and flat."
        maze_karel_debug_while: "How should you change this program to help me fill the hole?"
        maze_karel_debug_if: "Help! Fix the program so my field will be completely flat."
        maze_karel_debug_if_else: "De-bug this program so I can fill in the holes and remove all the piles."
        maze_karel_debug_function_1: "What should you change about this program to help me remove all the piles?"
        maze_karel_debug_function_2: "Can you de-bug this program for me so I can make my field flat?"
        maze_karel_debug_function_3: "Edit this program so I'll remove all the piles on my field. "
        turtle_5_1: "Try running this program, and make changes to see what happens. Can you figure out how it works? (Or delete it and replace it with something totally different)"
        turtle_5_2: "Try running this program, and make changes to see what happens. Can you figure out how it works? (Or delete it and replace it with something totally different)"
        turtle_5_3: "Try running this program, and make changes to see what happens. Can you figure out how it works? (Or delete it and replace it with something totally different)"
        turtle_5_4: "Try running this program, and make changes to see what happens. Can you figure out how it works? (Or delete it and replace it with something totally different)"
        turtle_5_5: "Try running this program, and make changes to see what happens. Can you figure out how it works? (Or delete it and replace it with something totally different)"
        turtle_5_6: "Try running this program, and make changes to see what happens. Can you figure out how it works? (Or delete it and replace it with something totally different)"
        maze_3_1: "I need to get to that pig! Type in a couple of calls to move(); so I can get my eggs back."
        maze_3_2: "Write me a program, so I can make it all the way to the pig."
        maze_3_3: "How should I get to the pig? Make sure I don't run into the box of TNT!"
        maze_3_4: "Argh! Write me a program that gets me around the TNT and to the pig."
      levelIncompleteError:
        maze_2_8: 'To solve this, find the pattern that repeats. Use a "repeat" block with these 3 blocks inside it: move, move, turn right.'
      other1StarError:
        maze_2_14: |-
          You need an "if" block inside a "repeat" block. If you're having trouble, try the previous level again to see how it worked.
      tooFewBlocksMsg:
        maze_2_8: 'To solve this, find the pattern that repeats. Use a "repeat" block with these 3 blocks inside it: move, move, turn right.'
    video:
      name:
        maze_intro: "Maze Intro"
        artist_intro: "Artist Intro"
        farmer_intro: "Farmer Intro"
        loop_times: "Repeat Times Block"
        loop_until: "Repeat Until Block"
        if: "If Block"
        if_else: "If/else Block"
        function: "Functions"
        loop_while: "While Block"
        loop_for: "Counter Block"
        parameters: "Functions with Parameters"
        hoc_wrapup: "Hour of Code Wrapup"
        20_wrapup: "20-Hour Wrapup"
