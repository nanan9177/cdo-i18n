"zh-CN":
  slides:
    maze_intro:
      1:
        image: "notes/hoc1_1.jpg"
        text: "欢迎来到你第一个小时的编程！让我们立刻开始吧。"
      2:
        image: "notes/hoc1_2.jpg"
        text: "我们将使用Blockly，一个可视化编程语言。你只需要拖放块来进行编程。"
      3:
        image: "notes/hoc1_3.jpg"
        text: '大多数代码都是通过打字输入的，但Blockly是可视的。每个块对应于一行"真正的"代码。'
      4:
        image: "notes/hoc1_4.jpg"
        text: "你将会学习计算机科学的基础概念。这些概念广泛的应用于各个领域，从应用程序到控制火星车。"
      5:
        image: "notes/hoc1_5.jpg"
        text: "一个程序是一组让计算机遵循的指令。"
      6:
        image: "notes/hoc1_6.jpg"
        text: "您的第一个程序的目标是要让愤怒的小鸟通过一个迷宫去打绿色的猪。"
      7:
        image: "notes/hoc1_7.jpg"
        text: "左边的迷宫是运行你的程序的地方。迷宫下面是每个谜题的说明。"
      8:
        image: "notes/hoc1_8.jpg"
        text: "中间的工具栏里有愤怒的小鸟的命令。你将用他们来生成你的代码。"
      9:
        image: "notes/hoc1_9.jpg"
        text: "在右边是你的工作区，你可以从工具栏里面把块拖到上面来编程。要删除一个块，将它拖到角落的垃圾箱里面。"
      10:
        image: "notes/hoc1_10.jpg"
        text: "每个块对应一条命令。如果你把”向前移动“块拖到工作区，并按”运行程序“，这只小鸟将在迷宫里向前移动一步。"
      11:
        image: "notes/hoc1_11.jpg"
        text: "你可以将许多块拖到工作区并把它们连接在一起，来让小鸟执行多个动作。小鸟会由上至下执行命令。"
      12:
        image: "notes/hoc1_12.jpg"
        text: "如果你运行了一个程序，但是想要修改它再重试，按”重置“按钮。"
      13:
        image: "notes/hoc1_13.jpg"
        text: "让我们去抓住那些猪!"
    artist_intro:
      1:
        image: "notes/stage5_1.jpg"
        text: "你好，我叫 JR!每一辆赛车团队都需要计算机科学家来帮助其队伍赢得比赛。他们通过分析数据来帮助赛车跑得更快。"
      2:
        image: "notes/stage5_2.jpg"
        text: "在下面的这些益智游戏中，你会扮演一名画家，你的任务就是在他们所到之处的后面画一条线。"
      3:
        image: "notes/stage5_3.jpg"
        text: '该模块的意思是"向前移动 100 个像素。"像素是构成你屏幕画面的一个个小点。'
      4:
        image: "notes/stage5_4.jpg"
        text: '这个模块的意思是"右转 90 度"。改代码会将你的艺术家在迷宫拼图块"转"相同的量。'
      5:
        image: "notes/stage5_5.jpg"
        text: "选中任意模块上的箭头来改变游戏中艺术家转向的度数。试玩几局来熟悉这个新模块。"
    farmer_intro:
      1:
        image: "notes/stage9_1.jpg"
        text: "你好，我是 Paola ！在接下来的益智游戏中，你将扮演一个准备平整土地开始播种的农夫。"
      2:
        image: "notes/stage9_2.jpg"
        text: "我们要工资！我们要工资！翻译尼玛这么多代码还有提示语神马的也不给我们付工资！严正抗议~~~"
      3:
        image: "notes/stage9_3.jpg"
        text: "The new blocks remove 1 shovelful of dirt from a pile and fill in 1 shovelful of dirt to a hole."
      4:
        image: "notes/stage9_4.jpg"
        text: "我们要工资！我们要工资！翻译尼玛这么多代码还有提示语神马的也不给我们付工资！严正抗议~~~"
    loop_times:
      1:
        image: "notes/hoc2_1.jpg"
        text: "你好，我是马克 ！让我们来学习循环。通过使用循环你可以让计算机将任何一组动作不停重复, 直至数千或甚至几十亿次。"
      2:
        image: "notes/hoc2_2.jpg"
        text: "在这个谜题中，我们想要将这只鸟向前移动 5个空格从而到达那只猪。"
      3:
        image: "notes/hoc2_3.jpg"
        text: "让我们使用新的”重复“块来帮我们走出迷宫。"
      4:
        image: "notes/hoc2_4.jpg"
        text: "尝试不用5个”向前移动“块..."
      5:
        image: "notes/hoc2_5.jpg"
        text: "我们可以在“重复”块里放入”向前移动“块，并且在上面写一个数字来告诉小鸟我们要重复多少次。"
      6:
        image: "notes/hoc2_6.jpg"
        text: '这一点很重要： 你可以在"重复"块中放多个命令。'
      7:
        image: "notes/hoc2_7.jpg"
        text: '试试看使用新的"重复"块吧！'
    loop_until:
      1:
        image: "notes/hoc3_1.jpg"
        text: '你好，我是克里斯。在加盟迈阿密热之前，我在乔治亚理工学院学习计算机科学。让我们试试我们新的块，在"重复直到"块。'
      2:
        image: "notes/hoc3_2.jpg"
        text: "如果我们不知道小鸟要走多少步才能到达猪呢？"
      3:
        image: "notes/hoc3_3.jpg"
        text: "如果我们在”重复直到“块里放一个”向前移动“块，小鸟会向前移动知道它抓到猪（或者撞上一堵墙）。"
      4:
        image: "notes/hoc3_4.jpg"
        text: '这一点很重要： 就像之前，我们可以在"重复直到"块里放多个块，所有这些块都会被重复。'
    if:
      1:
        image: "notes/hoc4_1.jpg"
        text: '你好，我是比尔！让我们来学习一个新的基本概念："判断"语句。计算机通过这个语句做决定。'
      2:
        image: "notes/hoc4_2.jpg"
        text: '你每天都在使用"如果"语句。在你早上出门之前，你会想如果外面在下雨，我最好穿上我的夹克。'
      3:
        image: "notes/hoc4_3.jpg"
        text: "我们可以让僵尸去检查左边是不是有路，而且如果他发现左边确实有路，我们就让他向左转。"
      4:
        image: "notes/hoc4_4.jpg"
        text: '要编写这段代码，我们需要拖出一个"如果"块，并在里面放一个"左转"块。'
      5:
        image: "notes/hoc4_5.jpg"
        text: '现在，如果我们在这段代码上面放一个"向前移动"的块，并且用一个"重复"块来包含住这段代码，每一次僵尸移动时候，他就会检查是否左边有路并且向左转。要做到每一步都进行这个检查，"重复"命令是关键。'
      6:
        image: "notes/hoc4_6.jpg"
        text: "如果语句是计算机科学中非常重要的一种语句。我写的第一个程序是一个井字游戏，在里面，我使用了“如果”语句说，如果对方马上就要赢了，就在那个位置上打上自己的符号。"
      7:
        image: "notes/hoc4_7.jpg"
        text: '学习如何使用"判断"块'
    if_else:
      1:
        image: "notes/hoc5_1.jpg"
        text: '你好，我的名字是 Saloni。我用计算机科学来帮助解决健康和医学上的问题。让我们来学习如何使用"如果其他"块。它看起来很像"如果"块，但它在结尾多出了一部分，"其他"。'
      2:
        image: "notes/hoc5_2.jpg"
        text: "如果我把”向前移动“块放在写着”做“的地方，并且把”左转“块放在写着”其他“的地方，这表明僵尸将会在这两者之间做一个选择。如果前面有路，僵尸就会往前走，否则（如果前面没有路），僵尸就会向左转。"
      3:
        image: "notes/hoc5_3.jpg"
        text: "就想”如果“块一样，我可以把”如果其他“块放在”重复“块里面，这样僵尸就会在重复向前移动，并检查是不是有需要转弯的地方。"
      4:
        image: "notes/hoc5_4.jpg"
        text: "现在，让这些僵尸去他们应该去的地方吧！"
    function:
      1:
        image: "notes/stage13_1.jpg"
        text: "我们要工资！我们要工资！翻译尼玛这么多代码还有提示语神马的也不给我们付工资！严正抗议~~~"
      2:
        image: "notes/stage13_2.jpg"
        text: "我们要工资！我们要工资！翻译尼玛这么多代码还有提示语神马的也不给我们付工资！严正抗议~~~"
      3:
        image: "notes/stage13_3.jpg"
        text: "我们要工资！我们要工资！翻译尼玛这么多代码还有提示语神马的也不给我们付工资！严正抗议~~~"
      4:
        image: "notes/stage13_4.jpg"
        text: |-
          The definition sits on the workspace, but our farmer won't run the function until we drag out our "fill 5" function block from functions category.
      5:
        image: "notes/stage13_5.jpg"
        text: |-
          Let's put the "fun" back in "FUNction!"
    loop_while:
      1:
        image: "notes/stage9_5.jpg"
        text: |-
          Hi, I'm Makinde! Let's learn about the "while block."
      2:
        image: "notes/stage9_6.jpg"
        text: "我们要工资！我们要工资！翻译尼玛这么多代码还有提示语神马的也不给我们付工资！严正抗议~~~"
      3:
        image: "notes/stage9_7.jpg"
        text: "For example, if the farmer is standing on a pile, she will continue to remove 1 shovelful WHILE there is still a pile beneath her."
    loop_for:
      1:
        image: "notes/stage11_1.jpg"
        text: "我们要工资！我们要工资！翻译尼玛这么多代码还有提示语神马的也不给我们付工资！严正抗议~~~"
      2:
        image: "notes/stage11_2.jpg"
        text: 'This is our new "counter" loop. It will perform actions over and over again and you can make the actions change slightly each time.'
      3:
        image: "notes/stage11_3.jpg"
        text: "我们要工资！我们要工资！翻译尼玛这么多代码还有提示语神马的也不给我们付工资！严正抗议~~~"
      4:
        image: "notes/stage11_4.jpg"
        text: "我们要工资！我们要工资！翻译尼玛这么多代码还有提示语神马的也不给我们付工资！严正抗议~~~"
    parameters:
      1:
        image: "notes/stage15_1.jpg"
        text: "我们要工资！我们要工资！翻译尼玛这么多代码还有提示语神马的也不给我们付工资！严正抗议~~~"
      2:
        image: "notes/stage15_2.jpg"
        text: "我们要工资！我们要工资！翻译尼玛这么多代码还有提示语神马的也不给我们付工资！严正抗议~~~"
      3:
        image: "notes/stage15_3.jpg"
        text: "我们要工资！我们要工资！翻译尼玛这么多代码还有提示语神马的也不给我们付工资！严正抗议~~~"
      4:
        image: "notes/stage15_4.jpg"
        text: "我们要工资！我们要工资！翻译尼玛这么多代码还有提示语神马的也不给我们付工资！严正抗议~~~"
      5:
        image: "notes/stage15_5.jpg"
        text: "我们要工资！我们要工资！翻译尼玛这么多代码还有提示语神马的也不给我们付工资！严正抗议~~~"
      6:
        image: "notes/stage15_6.jpg"
        text: "我们要工资！我们要工资！翻译尼玛这么多代码还有提示语神马的也不给我们付工资！严正抗议~~~"
      7:
        image: "notes/stage15_7.jpg"
        text: "我们要工资！我们要工资！翻译尼玛这么多代码还有提示语神马的也不给我们付工资！严正抗议~~~"
      8:
        image: "notes/stage15_8.jpg"
        text: "现在你可以使用数学块来输入不同的数字来绘制不同大小的三角形。"
    hoc_wrapup:
      1:
        image: "notes/hoc6_1.jpg"
        text: "恭喜你！用你在上一个谜题当中写的程序，你可以让任何一个机器人（僵尸，小鸟，火星探测器，自动驾驶车），在任何一个无分支的迷宫里找到出去的路。"
      2:
        image: "notes/hoc6_2.jpg"
        text: "你在这里所使用的基本概念是所有程序的核心。我们学习了重复循环语句，重复直到语句，如果语句，和如果其他语句。"
      3:
        image: "notes/hoc6_3.jpg"
        text: "如果你很喜欢这一个小时的编程体验，欢迎访问 code.org 来继续你在计算机科学的学习！当你完成我们的20小时课程，你就熟练掌握了编程的基础，可以开始学习如何编写手机应用程序，机器人程序，游戏，随便你。"
      4:
        image: "notes/hoc6_4.jpg"
        text: "技术正在改变我们所做的一切，而不管你是否年轻： 编程是一件很好玩、 很有创意的事，任何人都可以学习 ！"
    20_wrapup:
      1:
        image: "notes/bird.png"
        text: "即将推出笔记版本！"
