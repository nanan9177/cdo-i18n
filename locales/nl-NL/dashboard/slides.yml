"nl":
  slides:
    maze_intro:
      1:
        image: "notes/hoc1_1.jpg"
        text: "Welkom bij je eerste uur code! We duiken direct je eerste ontmoeting met programmeren in."
      2:
        image: "notes/hoc1_2.jpg"
        text: "We zullen Blockly gebruiken, een visuele programmeertaal waar je met drag-en-drop code schrijft."
      3:
        image: "notes/hoc1_3.jpg"
        text: 'De meeste code wordt ingetypt, maar Blockly is visueel. Ieder blok komt overeen met een "echte" regel code.'
      4:
        image: "notes/hoc1_4.jpg"
        text: "Je zal de basis van informatica leren. Deze concepten worden overal gebruikt, van apps voor je mobiele telefoon tot het besturen van de Mars-lander."
      5:
        image: "notes/hoc1_5.jpg"
        text: "Een programma is een reeks instructies die de computer opvolgt."
      6:
        image: "notes/hoc1_6.jpg"
        text: "Het doel van je eerste programma is om een Angry Bird door een doolhof te krijgen om een Groen Varken te raken."
      7:
        image: "notes/hoc1_7.jpg"
        text: "De linkerkant is het doolhof waar je programma in draait. De opdrachten voor iedere puzzel staan onder het doolhof."
      8:
        image: "notes/hoc1_8.jpg"
        text: "De middelste toolbox heeft de opdrachten voor de Angry Bird. Deze gebruik je om je code op te bouwen."
      9:
        image: "notes/hoc1_9.jpg"
        text: "Aan de rechterkant heb je je werkruimte waar je blokken uit je toolbox heen sleept om je programma op te bouwen. Om een blok te verwijderen sleep je het naar de prullenbak in de hoek."
      10:
        image: "notes/hoc1_10.jpg"
        text: 'Ieder blok is een opdracht. Wanneer je een "vooruit"-blok naar je werkruimte sleept en op "Voer Programma Uit" klikt, dan beweegt de vogel een stapje in het doolhof.'
      11:
        image: "notes/hoc1_11.jpg"
        text: "Om meer dan een actie uit te voeren, kun je meerder blokken naar je werkruimte slepen en ze aan elkaar plakken. De vogel zal de opdrachten van boven naar beneden uitvoeren."
      12:
        image: "notes/hoc1_12.jpg"
        text: 'Wanneer je een programma uit hebt gevoerd en het wil repareren en opnieuw beginnen, klik je op de "Opnieuw"-knop.'
      13:
        image: "notes/hoc1_13.jpg"
        text: "We zullen dit varkentje wel eens wassen!"
    artist_intro:
      1:
        image: "notes/stage5_1.jpg"
        text: "Hi, I'm JR! Every race car team need computer scientists to win. They analyze data from the car to make it go faster."
      2:
        image: "notes/stage5_2.jpg"
        text: "In these puzzles, you'll be an artist that draws a line behind them everywhere they go."
      3:
        image: "notes/stage5_3.jpg"
        text: 'This block says "move forward by 100 pixels." Pixels are just really tiny dots on your screen.'
      4:
        image: "notes/stage5_4.jpg"
        text: 'This block says "turn right by 90 degrees." This will turn your artist the same amount as the "turn" blocks in the maze puzzles.'
      5:
        image: "notes/stage5_5.jpg"
        text: "Click on the arrow in either of these blocks to change the amount the artist moves forward or turns. Play around to get familiar with these new blocks."
    farmer_intro:
      1:
        image: "notes/stage9_1.jpg"
        text: "Hi, I'm Paola! In these puzzles, you're a farmer who has to get her field completely flat to start planting crops."
      2:
        image: "notes/stage9_2.jpg"
        text: "You have to help her remove all the piles of dirt and fill in all the holes."
      3:
        image: "notes/stage9_3.jpg"
        text: "The new blocks remove 1 shovelful of dirt from a pile and fill in 1 shoveful of dirt to a hole."
      4:
        image: "notes/stage9_4.jpg"
        text: "The piles and holes are different sizes, so you have to tell the farmer how many shovelfuls to use."
    loop_times:
      1:
        image: "notes/hoc2_1.jpg"
        text: "Hallo, ik ben Mark! We gaan leren over lussen. Met lussen kun je een computer vertellen om een reeks acties telkens te herhalen, duizenden of zelfs miljarden keren."
      2:
        image: "notes/hoc2_2.jpg"
        text: "In deze puzzel willen we de vogel 5 vakjes naar voren laten bewegen om het varken te krijgen."
      3:
        image: "notes/hoc2_3.jpg"
        text: 'We kunnen het nieuwe "herhaal"-blok gebruiken om ons te helpen.'
      4:
        image: "notes/hoc2_4.jpg"
        text: 'In plaats van 5 "vooruit"-blokken hierheen te slepen...'
      5:
        image: "notes/hoc2_5.jpg"
        text: 'We kunnen een "vooruit"-blok in het "herhalen"-blok zetten en een getal in het blok zetten om aan te geven hoe vaak het moet herhalen.'
      6:
        image: "notes/hoc2_6.jpg"
        text: 'Dit is belangrijk: je kunt meer dan een commando in een "herhalen"-blok zetten.'
      7:
        image: "notes/hoc2_7.jpg"
        text: 'Veel plezier met je nieuwe "herhalen"-blok!'
    loop_until:
      1:
        image: "notes/hoc3_1.jpg"
        text: 'Hallo, ik ben Chris. Voordat ik bij Miami Heat ging basketballen heb ik in Amerika Informatica gestudeerd. We gaan nu ons nieuwe blok uitproberen: het "herhalen totdat"-blok.'
      2:
        image: "notes/hoc3_2.jpg"
        text: "Wat moeten we doen als we niet weten hoe ver de vogel moet bewegen om het varken te krijgen?"
      3:
        image: "notes/hoc3_3.jpg"
        text: 'Wanneer we een "vooruit"-blok binnen een "herhalen totdat"-blok zetten, dan gaat de vogel vooruit TOT het bij het varken komt (of tegen een muur aanloopt).'
      4:
        image: "notes/hoc3_4.jpg"
        text: 'En dit is belangrijk: net als eerder, kunnen we meerdere blokken binnen het "herhalen totdat" blok zetten, en zij zullen allemaal worden herhaald.'
    if:
      1:
        image: "notes/hoc4_1.jpg"
        text: 'Hallo, ik ben Bill! We gaan een fundamenteel nieuw concept leren: "Als"-statements. Zo maken computers beslissingen.'
      2:
        image: "notes/hoc4_2.jpg"
        text: |-
          Je gebruikt zelf ook dagelijks "Als"-statements. Voor je 's-ochtends naar buiten gaat, zeg je: ALS het regent, dan moet ik mijn regenjas aan.
      3:
        image: "notes/hoc4_3.jpg"
        text: "We kunnen de zombie vertellen dat ALS er een pad naar links is, hij die richting op moet draaien."
      4:
        image: "notes/hoc4_4.jpg"
        text: 'Om hier de code voor te schrijven slepen we ons "Als"-blok naar het midden en stoppen we er een "linksaf"-blok in.'
      5:
        image: "notes/hoc4_5.jpg"
        text: 'Als we er nu een "vooruit"-blok boven zetten en een "herhalen"-blok om alles heen, dan kijkt de zombie iedere keer als hij beweegt of hij naar een pad naar links kan draaien. Het "herhalen"-commando is belangrijk om te zorgen dat hij iedere stap kijkt of er een pad is.'
      6:
        image: "notes/hoc4_6.jpg"
        text: |-
          "Als"-statements zijn heel belangrijk in de informatica. Een van de eerste programma's die ik heb geschreven was een boter-, kaas- en eieren-spelletje, en er was een "Als"-statement dat zei dat ALS de ander bijna ging winnen, ik het vakje waarmee hij zou winnen in ging pikken.
      7:
        image: "notes/hoc4_7.jpg"
        text: 'Veel plezier met het "Als"-blok!'
    if_else:
      1:
        image: "notes/hoc5_1.jpg"
        text: 'Hallo, ik heet Saloni! Ik gebruik informatie om problemen met gezondheid en medicatie op te lossen. Laten we leren over het "als dan"-blok. Het ziet eruit als het "als"-blok, maar met een extra "dan"-stukje.'
      2:
        image: "notes/hoc5_2.jpg"
        text: 'Als ik een "vooruit"-blok zet bij "uitvoeren" en een "linksaf"-blok bij "anders" dan betekent dat dat de zombie kan kiezen uit 2 opties: ALS er een pad vooruit is dan gaat de zombie vooruit, ANDERS (als er geen pad vooruit is) dan draait de zombie naar links.'
      3:
        image: "notes/hoc5_3.jpg"
        text: 'Net als het "als"-blok kunnen we "als anders"-blokken in een "herhalen"-blok zetten zodat de zombie blijft bewegen en het "als anders"-blok blijft kijken of hij kan draaien.'
      4:
        image: "notes/hoc5_4.jpg"
        text: "Stuur die zombies naar waar ze horen!"
    function:
      1:
        image: "notes/stage13_1.jpg"
        text: "Hi, I'm Brina, an engineer at Instagram. A function is certain lines of code that you want to use over and over again, so instead of writing that code out everytime, you can just use one block."
      2:
        image: "notes/stage13_2.jpg"
        text: "We're going to learn how to define functions. Function definitions have a star in the corner. The name of the function is written on the top line."
      3:
        image: "notes/stage13_3.jpg"
        text: |-
          The blocks that go inside the definition tell us what it does. So this function definition is called "fill 5" and it's made up of a "repeat" block and a "fill" block.
      4:
        image: "notes/stage13_4.jpg"
        text: |-
          The definition sits on the workspace, but our farmer won't run the function until we drag out our "fill 5 function" block from functions category.
      5:
        image: "notes/stage13_5.jpg"
        text: |-
          Let's put the "fun" back in "FUNction!"
    loop_while:
      1:
        image: "notes/stage9_5.jpg"
        text: |-
          Hi, I'm Makinde! Let's learn about the "while block."
      2:
        image: "notes/stage9_6.jpg"
        text: 'The "while block" will do whatever you put inside it AS LONG AS the statment on the top is TRUE.'
      3:
        image: "notes/stage9_7.jpg"
        text: "For example, if the farmer is standing on a pile, she will continue to remove 1 shoveful WHILE there is still a pile beneath her."
    loop_for:
      1:
        image: "notes/stage11_1.jpg"
        text: "Hi, I'm Trina, and I work for Pixar. I've worked on a bunch of movies, including Shrek."
      2:
        image: "notes/stage11_2.jpg"
        text: 'This is our new "counter" loop. It will perform actions over and over again and you can make the actions change slightly each time.'
      3:
        image: "notes/stage11_3.jpg"
        text: 'In this example, our "counter" loop says "count with counter from 50 to 90 by 10" and inside it, we have our "draw a square" block. Drag the "counter" block from the "Variables" section into the "length" spot.'
      4:
        image: "notes/stage11_4.jpg"
        text: "This means our artist is going to draw a square that has 50 pixel length sides, then it will add 10 to that and draw a square with 60 pixel length sides. Then it will keep adding 10 and drawing squares until it reaches 90. So we'll have squares of 50, 60, 70, 80, and 90."
    parameters:
      1:
        image: "notes/stage15_1.jpg"
        text: "Hi, I'm Janete, and I'm an engineer at Zynga."
      2:
        image: "notes/stage15_2.jpg"
        text: "What if we want to draw a bunch of triangles and have their lengths be different sizes?"
      3:
        image: "notes/stage15_3.jpg"
        text: "We could write all that code out by hand or we can use a function with parameters."
      4:
        image: "notes/stage15_4.jpg"
        text: 'To do this, click the blue star on the "draw a triangle" function definition. Then drag "input name" into the "input" block.'
      5:
        image: "notes/stage15_5.jpg"
        text: |-
          Then if you write "length" in the spot where it says "x" and press "Enter" you'll create a length input for your function.
      6:
        image: "notes/stage15_6.jpg"
        text: 'Then click on the star. Now, you want to click on the variables category and drag the "length" block into the "move forward" block of your function definition. And drag away the old number block.'
      7:
        image: "notes/stage15_7.jpg"
        text: 'To use your function with parameters, click on the functions category and drag out your "draw a triangle with length" function.'
      8:
        image: "notes/stage15_8.jpg"
        text: "Now you can use the math block to input different numbers to draw triangles of different sizes."
    hoc_wrapup:
      1:
        image: "notes/hoc6_1.jpg"
        text: "Gefeliciteerd! Met die oplossing voor de laatste puzzel heb je net code geschreven die IEDERE robot kan vertellen hoe hij uit een doolhof zonder splitsingen moet komen, of het nu een zombie is, een vogel, een Mars-lander of zelfs een automatisch rijdende auto."
      2:
        image: "notes/hoc6_2.jpg"
        text: 'De basisbegrippen die je hebt gebruikt zijn de kern van ieder programma of app die je gebruikt. We hebben geleerd over lussen, herhalings-statements, "als"-statements en "als anders"-statements.'
      3:
        image: "notes/hoc6_3.jpg"
        text: "Als je je eerste uur code leuk vond, ga dan naar code.org om verder te gaan met je informatica-opleiding! Zogau je onze cursus van 20 uur klaar hebt, beheers je de grondbeginselen van het programmeren, en kun je beginnen te leren hoe je apps kunt maken voor mobiele telefoons, programma's voor robots, spelletjes, je kunt het zo gek niet bedenken."
      4:
        image: "notes/hoc6_4.jpg"
        text: "Technologie verandert alles wat we doen en of je nu jong of oud bent: programmeren is leuk, creatief, en iedereen kan het leren!"
    20_wrapup:
      1:
        image: "notes/bird.png"
        text: "Ondertiteling komt eraan!"
