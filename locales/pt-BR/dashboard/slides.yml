pt-BR:
  slides:
    maze_intro:
      1:
        image: notes/hoc1_1.png
        text: Bem-vindo à sua primeira hora de código! Sou Tess, engenheira de software no Google. Vamos mergulhar logo em seu primeiro contato com a programação.
      2:
        image: notes/hoc1_2.png
        text: Estaremos usando Blockly, uma linguagem de programação visual onde você arrasta e solta blocos para escrever código.
      3:
        image: notes/hoc1_3.png
        text: A maioria dos programas são escritos com texto e sob o capô dos blocos que você estará usando será texto também.
      4:
        image: notes/hoc1_4.png
        text: Você vai aprender os fundamentos da ciência da computação, que é usado para fazer tantas coisas legais, da criação de aplicações para telefone para controlar o Mars rover.
      5:
        image: notes/hoc1_5.png
        text: Um programa é um conjunto de instruções para o seu computador seguir.
      6:
        image: notes/hoc1_6.png
        text: Nós vamos escrever programas que levará um pássaro irritado através de um labirinto até o piggie ruim.
      7:
        image: notes/hoc1_7.png
        text: Em Blocky, o lado esquerdo é o labirinto onde o programa será executado. As instruções para cada enigma são escritas abaixo do labirinto.
      8:
        image: notes/hoc1_8.png
        text: O meio é a caixa de ferramentas que tem os comandos que o pássaro entende. Você vai usar esses blocos para construir o seu código.
      9:
        image: notes/hoc1_9.png
        text: À direita é o seu espaço de trabalho onde você vai arrastar e soltar blocos da caixa de ferramentas para construir o seu programa. E o lixo que está no canto superior direito se você quiser excluir um bloco.
      10:
        image: notes/hoc1_10.png
        text: Cada bloco é uma instrução. Se você arrastar um bloco "Avançar" a sua área de trabalho e pressione "Executar programa", o pássaro se move para a frente um espaço no labirinto.
      11:
        image: notes/hoc1_11.png
        text: Se você quer que seu pássaro faça mais de uma ação, arraste outro bloco para a sua área de trabalho e aguarde até aparece a seta laranja. Quando você pressionar o botão "Executar programa", o pássaro vai fazer os comandos no espaço de trabalho de cima para baixo. O comando que o pássaro está fazendo atualmente no labirinto será destacado na área de trabalho.
      12:
        image: notes/hoc1_12.png
        text: Se você executa um programa e quer corrigi-lo e tentar novamente, pressione o botão "Refazer".
      13:
        image: notes/hoc1_13.png
        text: Vamos pegar esses porcos!
    artist_intro:
      1:
        image: notes/bird.png
        text: Mostrar notas em breve!
    farmer_intro:
      1:
        image: notes/bird.png
        text: Mostrar notas em breve!
    loop_times:
      1:
        image: notes/hoc2_1.png
        text: Olá, sou Mark! Vamos aprender sobre ciclos.
      2:
        image: notes/hoc2_2.png
        text: Neste quebra-cabeça, queremos fazer o pássaro avançar 5 espaços para chegar ao porco.
      3:
        image: notes/hoc2_3.png
        text: And we can use the new "repeat times" block which is called a loop to help us out.
      4:
        image: notes/hoc2_4.png
        text: Em vez de arrastar 5 blocos "Avançar"...
      5:
        image: notes/hoc2_5.png
        text: We can put the "move forward" block inside the "repeat times" block and write a number in the block to tell it how many times to repeat.
      6:
        image: notes/hoc2_6.png
        text: And you can put more than one command inside a "repeat times" block.
      7:
        image: notes/hoc2_7.png
        text: Aproveite o uso do seu novo bloco "repetir"!
    loop_until:
      1:
        image: notes/hoc3_1.png
        text: |-
          Hi, I'm Sara. Let's try out our new block called the "repeat until" block.
      2:
        image: notes/hoc4_2.png
        text: "You use If statments in your everday life. For example, before you go outside in the morning, you say IF it's raining outside, I need to wear my jacket."
      3:
        image: notes/hoc4_3.png
        text: "So we can tell the zombie to check IF there's path to the left and if he finds a path to the left, we can have him turn in that direction."
      4:
        image: notes/hoc4_4.png
        text: |-
          To write the code for this, let's drag out our "if" block and put a "turn left" block inside of it.
      5:
        image: notes/hoc4_5.png
        text: |-
          Now, if we put a "move forward" block above it and a "repeat" block around everything, this will tell the zombie to repeatedly move forward and everytime he moves forward, he'll check if there's a path to the left. Then when he finds a path to the left, he'll turn left and continue moving forward.
      6:
        image: notes/hoc4_6.png
        text: If statements are really important in computer science. One of the first programs I ever wrote was a tic-tac-toe game, and there was a If statement that said IF the other person is about to win, block the spot that lets them win.
      7:
        image: notes/hoc4_7.png
        text: Have fun using the "if" block!
    if_else:
      1:
        image: notes/hoc5_1.png
        text: |-
          Hi, my name is Saloni, and I study computer science and how it applies to health. Let's learn about the "if else" block. It looks like the "if" block, but it has an extra part at the end that says "else".
      2:
        image: notes/hoc5_2.png
        text: |-
          If I put a "move forward" block in the spot where it says "do" and a "turn left" block where it says "else" that means that the zombie will choose between 2 options. If there is a path ahead, the zombie will move forward, and if there isn't a path ahead, the zombie will turn left.
      3:
        image: notes/hoc5_3.png
        text: |-
          Just like the "if" block, we can "if else" blocks inside a "repeat" blocks so that the zombie keeps moving forward on the path and the "if else" block will keep checking if there's somewhere to turn.
      4:
        image: notes/hoc5_4.png
        text: Now, get those zombies where they belong!
    function:
      1:
        image: notes/bird.png
        text: Mostrar notas aparecerá em breve!
    loop_while:
      1:
        image: notes/bird.png
        text: Mostrar notas aparecerá em breve!
    loop_for:
      1:
        image: notes/bird.png
        text: Mostrar notas aparecerá em breve!
    parameters:
      1:
        image: notes/bird.png
        text: Mostrar notas aparecerá em breve!
    hoc_wrapup:
      1:
        image: notes/hoc6_1.png
        text: "Congratulations! With the last puzzle you solved, you just wrote the code that can tell any robot how to find it's way through a non-branching maze or tunnel of any complexity or any length, whether it's a zombie, a bird, a mars rover, or even a self-driving car."
      2:
        image: notes/hoc6_2.png
        text: The basic concepts you just learned are at the heart of virtually every program or app you
      3:
        image: notes/hoc6_3.png
        text: If you liked your first hour of code, visit code.org to continue your education into computer science! Once you complete our 20 hour course, you
      4:
        image: notes/hoc6_4.png
        text: "Technology is changing everything we do and it doesn't matter if you're young or old: programming is fun, it's creative, and anyone can learn!"
    20_wrapup:
      1:
        image: notes/bird.png
        text: Mostrar notas aparecerá em breve!
