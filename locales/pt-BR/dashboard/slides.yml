pt-BR:
  slides:
    maze_intro:
      1:
        image: notes/hoc1_1.png
        text: Bem-vindo à sua primeira hora de código! Sou Tess, engenheira de software no Google. Vamos mergulhar logo em seu primeiro contato com a programação.
      2:
        image: notes/hoc1_2.png
        text: Estaremos usando Blockly, uma linguagem de programação visual onde você arrasta e solta blocos para escrever código.
      3:
        image: notes/hoc1_3.png
        text: A maioria dos programas são escritos com texto e sob o capô dos blocos que você estará usando será texto também.
      4:
        image: notes/hoc1_4.png
        text: Você vai aprender os fundamentos da ciência da computação, que é usado para fazer tantas coisas legais, da criação de aplicações para telefone para controlar o Mars rover.
      5:
        image: notes/hoc1_5.png
        text: Um programa é um conjunto de instruções para o seu computador seguir.
      6:
        image: notes/hoc1_6.png
        text: Nós vamos escrever programas que levará um pássaro irritado através de um labirinto até o piggie ruim.
      7:
        image: notes/hoc1_7.png
        text: Em Blocky, o lado esquerdo é o labirinto onde o programa será executado. As instruções para cada enigma são escritas abaixo do labirinto.
      8:
        image: notes/hoc1_8.png
        text: O meio é a caixa de ferramentas que tem os comandos que o pássaro entende. Você vai usar esses blocos para construir o seu código.
      9:
        image: notes/hoc1_9.png
        text: À direita é o seu espaço de trabalho onde você vai arrastar e soltar blocos da caixa de ferramentas para construir o seu programa. E o lixo que está no canto superior direito se você quiser excluir um bloco.
      10:
        image: notes/hoc1_10.png
        text: Cada bloco é uma instrução. Se você arrastar um bloco "Avançar" a sua área de trabalho e pressione "Executar programa", o pássaro se move para a frente um espaço no labirinto.
      11:
        image: notes/hoc1_11.png
        text: Se você quer que seu pássaro faça mais de uma ação, arraste outro bloco para a sua área de trabalho e aguarde até aparece a seta laranja. Quando você pressionar o botão "Executar programa", o pássaro vai fazer os comandos no espaço de trabalho de cima para baixo. O comando que o pássaro está fazendo atualmente no labirinto será destacado na área de trabalho.
      12:
        image: notes/hoc1_12.png
        text: Se você executa um programa e quer corrigi-lo e tentar novamente, pressione o botão "Refazer".
      13:
        image: notes/hoc1_13.png
        text: Vamos pegar esses porcos!
    artist_intro:
      1:
        image: notes/bird.png
        text: Mostrar notas em breve!
    farmer_intro:
      1:
        image: notes/bird.png
        text: Mostrar notas em breve!
    loop_times:
      1:
        image: notes/hoc2_1.png
        text: Olá, sou Mark! Vamos aprender sobre ciclos.
      2:
        image: notes/hoc2_2.png
        text: Neste quebra-cabeça, queremos fazer o pássaro avançar 5 espaços para chegar ao porco.
      3:
        image: notes/hoc2_3.png
        text: E podemos usar o novo bloco "repetir" que é um ciclo para nos ajudar.
      4:
        image: notes/hoc2_4.png
        text: Em vez de arrastar 5 blocos "Avançar"...
      5:
        image: notes/hoc2_5.png
        text: Podemos colocar o bloco "Avançar" dentro do bloco "repetir" e escrever um número no bloco para dizer quantas vezes repetir.
      6:
        image: notes/hoc2_6.png
        text: E você pode colocar mais de um comando dentro de um bloco "repetir".
      7:
        image: notes/hoc2_7.png
        text: Aproveite o uso do seu novo bloco "repetir"!
    loop_until:
      1:
        image: notes/hoc3_1.png
        text: Oi, sou a Sara. Vamos experimentar o nosso novo bloco chamado o bloco "repetir até que".
      2:
        image: notes/hoc3_2.png
        text: "What if we didn't know how many spaces the bird had to move to get to the pig?"
      3:
        image: notes/hoc3_3.png
        text: If we put a "move forward" block inside the "repeat until" block, the bird will move forward until it reaches the pig or crashes into a wall.
      4:
        image: notes/hoc3_4.png
        text: And just like the "repeat times" block, we can put multiple blocks inside the "repeat until" block and the bird will repeat those commands over and over again until it reaches the pig or crashes into a wall.
    if:
      1:
        image: notes/hoc4_1.png
        text: "Hi, I'm Bill! Let's learn about If statements, which is the way that computers make decisions."
      2:
        image: notes/hoc4_2.png
        text: "You use If statments in your everday life. For example, before you go outside in the morning, you say IF it's raining outside, I need to wear my jacket."
      3:
        image: notes/hoc4_3.png
        text: "So we can tell the zombie to check IF there's path to the left and if he finds a path to the left, we can have him turn in that direction."
      4:
        image: notes/hoc4_4.png
        text: |-
          To write the code for this, let's drag out our "if" block and put a "turn left" block inside of it.
      5:
        image: notes/hoc4_5.png
        text: |-
          Now, if we put a "move forward" block above it and a "repeat" block around everything, this will tell the zombie to repeatedly move forward and everytime he moves forward, he'll check if there's a path to the left. Then when he finds a path to the left, he'll turn left and continue moving forward.
      6:
        image: notes/hoc4_6.png
        text: If statements are really important in computer science. One of the first programs I ever wrote was a tic-tac-toe game, and there was a If statement that said IF the other person is about to win, block the spot that lets them win.
      7:
        image: notes/hoc4_7.png
        text: Have fun using the "if" block!
    if_else:
      1:
        image: notas/hoc3_1.png
        text: Oi, meu nome é Saloni e estudo ciência da computação e como se aplica a saúde. Vamos aprender sobre o bloco "IF ELSE". Semelhante ao bloco "IF", mas tem uma parte extra no final que diz "senão".
      2:
        image: notas/hoc3_1.png
        text: Se eu colocar um bloco "Avançar" no local onde diz "fazer" e um bloco "Vire à esquerda" onde se diz "senão", isso significa que o zumbi vai escolher entre 2 opções. Se há um caminho pela frente, o zumbi vai avançar, e se não há um caminho em frente, o zumbi vai virar à esquerda.
      3:
        image: notas/hoc3_1.png
        text: Como o bloco "IF", nós podemos usar blocos "IF ELSE" dentro de um bloco "repetição" para que o zumbi continue se movendo para a frente no caminho e o bloco "IF ELSE" irá manter a verificação se há algum lugar para virar.
      4:
        image: notas/hoc3_1.png
        text: Agora coloque os zumbis onde eles devem ficar!
    function:
      1:
        image: notes/bird.png
        text: Mostrar notas aparecerá em breve!
    loop_while:
      1:
        image: notes/bird.png
        text: Mostrar notas aparecerá em breve!
    loop_for:
      1:
        image: notes/bird.png
        text: Mostrar notas aparecerá em breve!
    parameters:
      1:
        image: notes/bird.png
        text: Mostrar notas aparecerá em breve!
    hoc_wrapup:
      1:
        image: notas/hoc3_1.png
        text: Parabéns! Com o último quebra-cabeça resolvido, você acabou de escrever o código que pode dizer a qualquer robô como encontrar o seu caminho através de um labirinto sem ramificação ou túnel de qualquer complexidade ou qualquer comprimento, seja um zumbi, um pássaro, uma missão a Marte ou até mesmo um carro sem motorista.
      2:
        image: notas/hoc3_1.png
        text: "The basic concepts you just learned are at the heart of virtually every program or app you'll ever try.  We learned about repeat loops, repeat until statements, if statements, and the if else block."
      3:
        image: notas/hoc3_1.png
        text: "If you liked your first hour of code, visit code.org to continue your education into computer science! Once you complete our 20 hour course, you'll have mastered the basics of programming, and can start learning how to write phone apps, robot instructions, games, you name it."
      4:
        image: notes/hoc6_4.png
        text: "A tecnologia está mudando tudo o que fazemos e não importa se você é jovem ou velho: programação é divertido, é criativo, e qualquer um pode aprender!"
    20_wrapup:
      1:
        image: notes/bird.png
        text: Mostrar notas aparecerá em breve!
