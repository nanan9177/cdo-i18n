"zh-TW":
  slides:
    maze_intro:
      1:
        image: "notes/hoc1_1.jpg"
        text: "歡迎來到您寫程式的第一個小時 ！讓我們立刻潛入您第一次程式設計的嚐試。"
      2:
        image: "notes/hoc1_2.jpg"
        text: "我們將使用 Blockly，一個視覺化讓你拖放式操作要編寫代碼塊的程式設計語言。"
      3:
        image: "notes/hoc1_3.jpg"
        text: '大多數程式是類型的，但 Blockly 是視覺的。每個塊對應於一行"真正的"程式碼。'
      4:
        image: "notes/hoc1_4.jpg"
        text: "您將學習電腦科學的基礎概念，從應用程式到控制火星車的任何位置使用。"
      5:
        image: "notes/hoc1_5.jpg"
        text: "一個程式是一組讓您的電腦遵循的指令。"
      6:
        image: "notes/hoc1_6.jpg"
        text: "您第一個程式的目標是要讓憤怒鳥通過一個迷宮打綠豬。"
      7:
        image: "notes/hoc1_7.jpg"
        text: "左側是運行您程式的迷宮。每個謎題的說明在迷宮下面。"
      8:
        image: "notes/hoc1_8.jpg"
        text: "中間的工具箱有對憤怒鳥的指令。你會使用這些來生成您的程式。"
      9:
        image: "notes/hoc1_9.jpg"
        text: "右邊是您的工作區，在那裡，您會從工具箱中拖動塊來生成程式。若要刪除一個塊，請將其拖動到到角落裡的垃圾桶。"
      10:
        image: "notes/hoc1_10.jpg"
        text: '每個塊是一條指令。如果您將一個"向前"塊拖動到您的工作區，然後按"運行程式"，這只鳥將在迷宮上移動一個空格。'
      11:
        image: "notes/hoc1_11.jpg"
        text: "要做多個操作，您可以將許多塊拖到您的工作區，並將它們連接在一起。這只鳥會從頭到尾地執行命令。"
      12:
        image: "notes/hoc1_12.jpg"
        text: '如果您運行一個程式，並且想要修正它，然後再試，按"重置"按鈕。'
      13:
        image: "notes/hoc1_13.jpg"
        text: "讓我們去拿下那些豬!"
    artist_intro:
      1:
        image: "notes/stage5_1.jpg"
        text: "Hi，我是 JR！ 每一個車隊都需要電腦科學協助他們贏得比賽。透過賽程中車體的資料分析，將可以使車子跑得更快。"
      2:
        image: "notes/stage5_2.jpg"
        text: "在這些關卡中，你將扮演一名四處走動並留下繪畫線條的藝術家。"
      3:
        image: "notes/stage5_3.jpg"
        text: '這個程式積木的意思是"向前移動100個像素"。像素指的是電腦螢幕上的小點點。'
      4:
        image: "notes/stage5_4.jpg"
        text: '這個程式積木說的是"向右轉90度"。這個動作就像你在"迷宮"關卡中，使用"轉動"程式積木來轉動藝術家是同樣的效果喔。'
      5:
        image: "notes/stage5_5.jpg"
        text: "點選程式積木中的箭頭來改變藝術家的動作，使他向前遺動或是轉彎。試著隨意玩玩並熟悉這些新的程式積木的功能。"
    farmer_intro:
      1:
        image: "notes/stage9_1.jpg"
        text: "你好，我是 Paola ！在這些關卡中，你是一個必需將田地整平，好用來種植農作物的農夫。。"
      2:
        image: "notes/stage9_2.jpg"
        text: "你必需幫助她將所有小土堆移除，並將所有的坑洞填滿。"
      3:
        image: "notes/stage9_3.jpg"
        text: '新的程式積木"移除1"將從小土堆移除一鏟的泥土，"填滿1"將往坑洞中填入一鏟的泥土。'
      4:
        image: "notes/stage9_4.jpg"
        text: "每一個小土堆和坑洞的大小都不相同，所以你必需告訴農夫她要使用幾鏟來完成工作。"
    loop_times:
      1:
        image: "notes/hoc2_1.jpg"
        text: "你好，我是馬克 ！讓我們學習迴圈。使用迴圈可以告訴電腦反復重複任何一組的行動、 數千或甚至幾十億倍。"
      2:
        image: "notes/hoc2_2.jpg"
        text: "在這個謎題，我們想要向前移動鳥 5 個空格去抓豬。"
      3:
        image: "notes/hoc2_3.jpg"
        text: '我們可以使用新的"重複"塊來幫助我們。'
      4:
        image: "notes/hoc2_4.jpg"
        text: '而不是拖動"向前"塊 5 次 ......'
      5:
        image: "notes/hoc2_5.jpg"
        text: '我們可以把"前進"塊放在"重複"塊內，並給個數字告訴它重複多少次。'
      6:
        image: "notes/hoc2_6.jpg"
        text: '這一點很重要： 你可以把多個命令放在"重複"塊內。'
      7:
        image: "notes/hoc2_7.jpg"
        text: '享受使用您新的"重複"塊 ！'
    loop_until:
      1:
        image: "notes/hoc3_1.jpg"
        text: '你好，我是克裡斯。在加入邁阿密熱火之前，我去了喬治亞理工學院學習電腦科學。讓我們試試我們的新塊，"重複直到"塊。'
      2:
        image: "notes/hoc3_2.jpg"
        text: "如果我們不知道鳥需要移動多遠去抓豬嗎？"
      3:
        image: "notes/hoc3_3.jpg"
        text: '如果我們把一個"向前"塊放在"重複直到"塊中，這只鳥將向前移動，直到它抓到豬 （或撞上一堵牆）。'
      4:
        image: "notes/hoc3_4.jpg"
        text: '這一點很重要： 就像之前，我們可以把多個塊放在"重複直到"塊內，他們都將會重複。'
    if:
      1:
        image: "notes/hoc4_1.jpg"
        text: '你好，我是比爾 ！讓我們學習一個新的基本概念："If"語句。這是讓電腦如何做出決定。'
      2:
        image: "notes/hoc4_2.jpg"
        text: '您自己每天使用"If"語句。你每個早晨去外面之前，你說如果外面在下雨，我需要穿我的外套。'
      3:
        image: "notes/hoc4_3.jpg"
        text: "我們可以告訴僵屍檢查是否有到左邊的路徑，而且如果他發現到左邊的路徑，我們可以把他轉向這一方向。"
      4:
        image: "notes/hoc4_4.jpg"
        text: '為此編寫的程式，讓我們拖出我們的"如果"塊，並在裡面放"向左轉"的塊。'
      5:
        image: "notes/hoc4_5.jpg"
        text: '現在，如果我們在它上面放"向前"塊並放"重複"塊在周圍一切，僵屍每次移動，他會檢查是否有一個向左的路徑並轉向。"重複"命令是檢查每一步是否轉向的關鍵。'
      6:
        image: "notes/hoc4_6.jpg"
        text: "如果語句是在電腦科學中很重要的。我寫的第一個程式之一是正面圖遊戲，有一個如果說：如果有其他人要贏了，阻擋要讓他們贏的地點。"
      7:
        image: "notes/hoc4_7.jpg"
        text: '享受使用"如果"塊的樂趣 ！'
    if_else:
      1:
        image: "notes/hoc5_1.jpg"
        text: '你好，我的名字是 Saloni。我使用電腦科學來協助解決在衛生和醫學問題。讓我們瞭解"假如-其它"塊。它看起來像"假如"塊，但它有一個額外的部分在末尾說明，"其它"。'
      2:
        image: "notes/hoc5_2.jpg"
        text: '如果我把放著"向前"塊寫在"做"和"向左轉"塊寫在"其他"區域，這意味著僵屍將在 2 選項之間進行選擇。如果有一條向前路徑，僵屍將移動向前，和以其他方式 （不存在向前的路徑），僵屍會左轉。'
      3:
        image: "notes/hoc5_3.jpg"
        text: '就像"假如"塊，我們可以把"假如-其它"塊"放在重複"塊內，因此僵屍保持移動和"假如-其它"塊將保持檢查是否有什麼地方要轉向。'
      4:
        image: "notes/hoc5_4.jpg"
        text: "現在，讓這些僵屍到屬於他們的地方 ！"
    function:
      1:
        image: "notes/stage13_1.jpg"
        text: "Hi, 我是 Brina 來是 Instagram的工程師。函數指的是會重覆使用到的程式碼，因此你可以使用函數類別的程式積木來取代重覆出現的大量程式碼。"
      2:
        image: "notes/stage13_2.jpg"
        text: "We're going to learn how to define functions. Function definitions have a star in the corner. The name of the function is written on the top line."
      3:
        image: "notes/stage13_3.jpg"
        text: |-
          The blocks that go inside the definition tell us what it does. So this function definition is called "fill 5" and it's made up of a "repeat" block and a "fill" block.
      4:
        image: "notes/stage13_4.jpg"
        text: |-
          The definition sits on the workspace, but our farmer won't run the function until we drag out our "fill 5" function block from functions category.
      5:
        image: "notes/stage13_5.jpg"
        text: |-
          Let's put the "fun" back in "FUNction!"
    loop_while:
      1:
        image: "notes/stage9_5.jpg"
        text: |-
          Hi, I'm Makinde! Let's learn about the "while block."
      2:
        image: "notes/stage9_6.jpg"
        text: 'The "while block" will do whatever you put inside it AS LONG AS the statement on the top is TRUE.'
      3:
        image: "notes/stage9_7.jpg"
        text: "For example, if the farmer is standing on a pile, she will continue to remove 1 shovelful WHILE there is still a pile beneath her."
    loop_for:
      1:
        image: "notes/stage11_1.jpg"
        text: "Hi, I'm Trina, and I work for Pixar. I've worked on a bunch of movies, including Shrek."
      2:
        image: "notes/stage11_2.jpg"
        text: 'This is our new "counter" loop. It will perform actions over and over again and you can make the actions change slightly each time.'
      3:
        image: "notes/stage11_3.jpg"
        text: 'In this example, our "counter" loop says "count with counter from 50 to 90 by 10" and inside it, we have our "draw a square" block. Drag the "counter" block from the "Variables" section into the "length" spot.'
      4:
        image: "notes/stage11_4.jpg"
        text: "This means our artist is going to draw a square that has 50 pixel length sides, then it will add 10 to that and draw a square with 60 pixel length sides. Then it will keep adding 10 and drawing squares until it reaches 90. So we'll have squares of 50, 60, 70, 80, and 90."
    parameters:
      1:
        image: "notes/stage15_1.jpg"
        text: "Hi, I'm Janete, and I'm an engineer at Zynga."
      2:
        image: "notes/stage15_2.jpg"
        text: "What if we want to draw a bunch of triangles and have their lengths be different sizes?"
      3:
        image: "notes/stage15_3.jpg"
        text: "We could write all that code out by hand or we can use a function with parameters."
      4:
        image: "notes/stage15_4.jpg"
        text: 'To do this, click the blue star on the "draw a triangle" function definition. Then drag "input name" into the "input" block.'
      5:
        image: "notes/stage15_5.jpg"
        text: |-
          Then if you write "length" in the spot where it says "x" and press "Enter" you'll create a length input for your function.
      6:
        image: "notes/stage15_6.jpg"
        text: 'Then click on the star. Now, you want to click on the variables category and drag the "length" block into the "move forward" block of your function definition. And drag away the old number block.'
      7:
        image: "notes/stage15_7.jpg"
        text: '要使用具有參數的函數功能，只需點選函數類別，然後將函數"畫一個長度為...的三角形"程式積木拖拉到出來就行了。'
      8:
        image: "notes/stage15_8.jpg"
        text: "現在您可以使用數學類別的程式積木，輸入不同的數值來畫出不同大小的三角形。"
    hoc_wrapup:
      1:
        image: "notes/hoc6_1.jpg"
        text: "恭喜 ！你解決了最後一個益智遊戲，你只是寫程式，可以告訴任何機器人如何找到自己的方式透過非分支迷宮或任何長度的隧道，無論是一個僵屍，一隻鳥、 火星車或甚至自行駕駛的汽車。"
      2:
        image: "notes/hoc6_2.jpg"
        text: "你使用的基本概念是在每個程式或應用程式中你會試過的核心。如果我們瞭解了重複迴圈: 重複直到語句，假如語句，和假如-其它語句。"
      3:
        image: "notes/hoc6_3.jpg"
        text: "如果你喜歡你寫程式的第一個小時，訪問 code.org，繼續你在電腦科學的教育 ！一旦你完成我們 20 小時課程，你就會掌握程式設計的基礎知識和可以開始學習如何編寫手機應用程式，機器人說明，遊戲，隨便你。"
      4:
        image: "notes/hoc6_4.jpg"
        text: "技術正在改變我們所做的一切，無論你年齡多少： 程式設計很好玩、 很有創意，和任何人都可以學習 ！"
    20_wrapup:
      1:
        image: "notes/bird.png"
        text: "顯示備註即將推出 ！"
