"ca":
  slides:
    maze_intro:
      1:
        image: "notes/hoc1_1.jpg"
        text: "Benvingut a la teva primera hora de codi! Anem a submergir-nos en la teva primera experiència de programació."
      2:
        image: "notes/hoc1_2.jpg"
        text: "Farem servir Blockly, un llenguatge de programació visual on pots arrossegar i deixar anar blocs per escriure codi."
      3:
        image: "notes/hoc1_3.jpg"
        text: |-
          La majoria de codi s'escriu a mà, però Blocky és visual. Cada bloc correspon a una línia de codi "real".
      4:
        image: "notes/hoc1_4.jpg"
        text: "Aprendràs els fundaments de la informàtica, conceptes que s'utilitzen en qualsevol lloc, des de fer aplicacions fins a controlar el Mars rover."
      5:
        image: "notes/hoc1_5.jpg"
        text: "Un programa és un conjunt d'instruccions que el teu ordinador segueix."
      6:
        image: "notes/hoc1_6.jpg"
        text: "L'objectiu del teu primer programa és guiar un Angry Bird a través d'un laberint per colpejar al porc verd."
      7:
        image: "notes/hoc1_7.jpg"
        text: "El costat esquerra és el laberint on s'executa el teu programa. Les instruccions per a cada puzzle estan a sota el laberint."
      8:
        image: "notes/hoc1_8.jpg"
        text: "La caixa d'eines d'enmig té els comandaments per l'Angry Birds. Els utilitzaràs per construir el teu codi."
      9:
        image: "notes/hoc1_9.jpg"
        text: "A la dreta hi ha la teva àrea de treball on podràs arrossegar els blocs de la caixa d'eines per construir el teu programa. Per eliminar un bloc, arrossega'l a la paperera del cantó."
      10:
        image: "notes/hoc1_10.jpg"
        text: |-
          Cada bloc és una instrucció. Si arrossegues el bloc "avançar" a la teva àrea de treball i prems "Executar Programa", l'ocell es mou un espai en el laberint.
      11:
        image: "notes/hoc1_11.jpg"
        text: "Per fer més d'una acció, pots arrossegar molts blocs a la teva àrea de treball i unir-los. L'ocell executarà els comandaments des de dalt a baix."
      12:
        image: "notes/hoc1_12.jpg"
        text: 'Si executes un programa i el vol arreglar i provar de nou, prem el botó "Reset".'
      13:
        image: "notes/hoc1_13.jpg"
        text: "Anem a per aquells porcs!"
    artist_intro:
      1:
        image: "notes/stage5_1.jpg"
        text: "Hi, I'm JR! Every race car team need computer scientists to win. They analyze data from the car to make it go faster."
      2:
        image: "notes/stage5_2.jpg"
        text: "In these puzzles, you'll be an artist that draws a line behind them everywhere they go."
      3:
        image: "notes/stage5_3.jpg"
        text: 'This block says "move forward by 100 pixels." Pixels are just really tiny dots on your screen.'
      4:
        image: "notes/stage5_4.jpg"
        text: 'This block says "turn right by 90 degrees." This will turn your artist the same amount as the "turn" blocks in the maze puzzles.'
      5:
        image: "notes/stage5_5.jpg"
        text: "Click on the arrow in either of these blocks to change the amount the artist moves forward or turns. Play around to get familiar with these new blocks."
    farmer_intro:
      1:
        image: "notes/stage9_1.jpg"
        text: "Hi, I'm Paola! In these puzzles, you're a farmer who has to get her field completely flat to start planting crops."
      2:
        image: "notes/stage9_2.jpg"
        text: "You have to help her remove all the piles of dirt and fill in all the holes."
      3:
        image: "notes/stage9_3.jpg"
        text: "The new blocks remove 1 shovelful of dirt from a pile and fill in 1 shoveful of dirt to a hole."
      4:
        image: "notes/stage9_4.jpg"
        text: "The piles and holes are different sizes, so you have to tell the farmer how many shovelfuls to use."
    loop_times:
      1:
        image: "notes/hoc2_1.jpg"
        text: "Hola, sóc Mark! Anem aprendre sobre els bucles. Utilitzant bucles pots dir-li a l'ordinador que repeteixi un conjunt d'accions una y una altra vegada, milers o fins i tot milers de millons de vegades."
      2:
        image: "notes/hoc2_2.jpg"
        text: "En aquest puzzle, volem fer l'ocell avançar 5 espais per agafar el porc."
      3:
        image: "notes/hoc2_3.jpg"
        text: 'Podem utilitzar el nou bloc "repetir" per ajudar-nos.'
      4:
        image: "notes/hoc2_4.jpg"
        text: |-
          En lloc d'arrossegar 5 blocs "avançar"...
      5:
        image: "notes/hoc2_5.jpg"
        text: 'Podem posar el bloc "avançar" dins el bloc "repetir" i escriure un nombre en el bloc per dir-li quantes vegades ha de repetir.'
      6:
        image: "notes/hoc2_6.jpg"
        text: |-
          I això és important: pots posar més d'un comandament dins un bloc "repetir".
      7:
        image: "notes/hoc2_7.jpg"
        text: 'Disfruta utilitztant el teu nou bloc "repetir"!'
    loop_until:
      1:
        image: "notes/hoc3_1.jpg"
        text: |-
          Hola, sóc Chris. Abans d'unir-me als Miami Heat, vaig anar a Georgia Tech per estudiar Informàtica. Anem a probar el nostre nou bloc, el bloc "repeteix fins".
      2:
        image: "notes/hoc3_2.jpg"
        text: "Què passaria si no sabéssim quant tindria que moure's l'ocell per arribar al porc?"
      3:
        image: "notes/hoc3_3.jpg"
        text: |-
          Si posam un bloc "avança" dins un bloc "repetir fins", l'ocell avançarà FINS que alcanci el porc (o xoqui amb una paret).
      4:
        image: "notes/hoc3_4.jpg"
        text: 'I això és important: com abans, podem posar varis blocs dins el bloc "repetir fins", i tots es repetiran.'
    if:
      1:
        image: "notes/hoc4_1.jpg"
        text: 'Hola, sóc Bill! Anem a aprendre un nou concepte fundamental: les declaracions "Si". Així és com els ordinadors prenen decisions.'
      2:
        image: "notes/hoc4_2.jpg"
        text: |-
          Tu mateix utilitzes les declaracions "Si" cada dia. Abans de que surtis cada matí, dius SI està plovent, necessit agafar l'impermeable.
      3:
        image: "notes/hoc4_3.jpg"
        text: "Podem dir-li al zombie que comprovi SI hi ha un camí a l'esquerra, i si troba un camí a l'esquerra, podem fer-lo girar en aquella direcció."
      4:
        image: "notes/hoc4_4.jpg"
        text: |-
          Per escriure el codi per a això, anem a arrossegar el bloc "si" i posar un bloc "girar a l'esquerra" a dins.
      5:
        image: "notes/hoc4_5.jpg"
        text: |-
          Ara, si posam un bloc "avançar" damunt aquest i un bloc "repetir" al voltant de tot, cada vegada que el zombie es mogui, ell comprovarà si hi ha algun camí a l'esquerra i girarà. El comandament "repetir" és crític per comprovar si té que girar en cada pas.
      6:
        image: "notes/hoc4_6.jpg"
        text: |-
          Les delcaracions "Si" són molt importants en la informàtica. Un dels primers programes que vaig escriure era un joc de tic-tac-toe, i hi havia tres declaracions "Si" que deien: SI l'altre persona estaà a punt de guanyar, bloqueja el lloc que li permeti guanyar.
      7:
        image: "notes/hoc4_7.jpg"
        text: 'Diverteix-te utilitzant el bloc "Si"!'
    if_else:
      1:
        image: "notes/hoc5_1.jpg"
        text: 'Hola, el meu nom és Saloni. Utilitzo la informàtica per ajudar a resoldre problemes de salut i medicina. Anem a aprendre sobre el bloc "si altre". Pareix el bloc "si", però té una part extra al final que diu "altre".'
      2:
        image: "notes/hoc5_2.jpg"
        text: |-
          Si poso el bloc "avançar" en el lloc on posa "fer" i el bloc "girar a l'esquerra" on diu "altre", significa que el zombie eligirà entre dos 2 opcions. SI hi ha un camí davant, el zombie avançarà, i SINÓ (no hi ha un camí davant), el zombie girarà a l'esquerra.
      3:
        image: "notes/hoc5_3.jpg"
        text: 'Igual que el bloc "si", podem posar els blocs "si altre" a dins els blocs "repetir" de manera que el zombie es manté en moviment i el bloc "si altre" continuarà comprovant si hi ha algun lloc on girar.'
      4:
        image: "notes/hoc5_4.jpg"
        text: "Ara, col·loca aquells zombies al lloc on pertanyen!"
    function:
      1:
        image: "notes/stage13_1.jpg"
        text: "Hi, I'm Brina, an engineer at Instagram. A function is certain lines of code that you want to use over and over again, so instead of writing that code out everytime, you can just use one block."
      2:
        image: "notes/stage13_2.jpg"
        text: "We're going to learn how to define functions. Function definitions have a star in the corner. The name of the function is written on the top line."
      3:
        image: "notes/stage13_3.jpg"
        text: |-
          The blocks that go inside the definition tell us what it does. So this function definition is called "fill 5" and it's made up of a "repeat" block and a "fill" block.
      4:
        image: "notes/stage13_4.jpg"
        text: |-
          The definition sits on the workspace, but our farmer won't run the function until we drag out our "fill 5 function" block from functions category.
      5:
        image: "notes/stage13_5.jpg"
        text: |-
          Let's put the "fun" back in "FUNction!"
    loop_while:
      1:
        image: "notes/stage9_5.jpg"
        text: |-
          Hi, I'm Makinde! Let's learn about the "while block."
      2:
        image: "notes/stage9_6.jpg"
        text: 'The "while block" will do whatever you put inside it AS LONG AS the statment on the top is TRUE.'
      3:
        image: "notes/stage9_7.jpg"
        text: "For example, if the farmer is standing on a pile, she will continue to remove 1 shoveful WHILE there is still a pile beneath her."
    loop_for:
      1:
        image: "notes/stage11_1.jpg"
        text: "Hi, I'm Trina, and I work for Pixar. I've worked on a bunch of movies, including Shrek."
      2:
        image: "notes/stage11_2.jpg"
        text: 'This is our new "counter" loop. It will perform actions over and over again and you can make the actions change slightly each time.'
      3:
        image: "notes/stage11_3.jpg"
        text: 'In this example, our "counter" loop says "count with counter from 50 to 90 by 10" and inside it, we have our "draw a square" block. Drag the "counter" block from the "Variables" section into the "length" spot.'
      4:
        image: "notes/stage11_4.jpg"
        text: "This means our artist is going to draw a square that has 50 pixel length sides, then it will add 10 to that and draw a square with 60 pixel length sides. Then it will keep adding 10 and drawing squares until it reaches 90. So we'll have squares of 50, 60, 70, 80, and 90."
    parameters:
      1:
        image: "notes/stage15_1.jpg"
        text: "Hi, I'm Janete, and I'm an engineer at Zynga."
      2:
        image: "notes/stage15_2.jpg"
        text: "What if we want to draw a bunch of triangles and have their lengths be different sizes?"
      3:
        image: "notes/stage15_3.jpg"
        text: "We could write all that code out by hand or we can use a function with parameters."
      4:
        image: "notes/stage15_4.jpg"
        text: 'To do this, click the blue star on the "draw a triangle" function definition. Then drag "input name" into the "input" block.'
      5:
        image: "notes/stage15_5.jpg"
        text: |-
          Then if you write "length" in the spot where it says "x" and press "Enter" you'll create a length input for your function.
      6:
        image: "notes/stage15_6.jpg"
        text: 'Then click on the star. Now, you want to click on the variables category and drag the "length" block into the "move forward" block of your function definition. And drag away the old number block.'
      7:
        image: "notes/stage15_7.jpg"
        text: 'To use your function with parameters, click on the functions category and drag out your "draw a triangle with length" function.'
      8:
        image: "notes/stage15_8.jpg"
        text: "Now you can use the math block to input different numbers to draw triangles of different sizes."
    hoc_wrapup:
      1:
        image: "notes/hoc6_1.jpg"
        text: "Felicitats! Amb l'últim puzzle que has resolt, acabes d'escriure codi que pot dir-li a QUALSEVOL robot com trobar el seu camí a través d'un laberint sense ramificació o túnel de qualsevol longitud. No importa si és un zombie, un ocell, un rover de Mart o fins i tot un cotxe sense conductor."
      2:
        image: "notes/hoc6_2.jpg"
        text: 'Els conceptes bàsics que has utilitzat són el cor de qualsevol programa o aplicació que provis. Hem après sobre bucles, declaracions "repetir fins", "si" i "si altre".'
      3:
        image: "notes/hoc6_3.jpg"
        text: "Si t'ha agradat la teva primera hora de codi, visita code.org per continuar la teva educació informàtica! Una vegada has complet el nostre curs de 20 hores, hauràs dominat els fundaments bàsics de programació, i podràs començar a aprendre a escriure aplicacions mòbils, instruccions de robots, jocs, el que tu vulguis."
      4:
        image: "notes/hoc6_4.jpg"
        text: "La tecnologia està canviant tot el que feim i no importa si ets jove o vell: programar és divertit, és creatiu, i qualsevol pot aprendre!"
    20_wrapup:
      1:
        image: "notes/bird.png"
        text: "Les notes animades estaran disponibles aviat!"
