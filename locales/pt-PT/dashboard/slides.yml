"pt-PT":
  slides:
    maze_intro:
      1:
        image: "notes/hoc1_1.jpg"
        text: "Bem-vindo à tua primeira hora de código! Vamos mergulhar logo no teu primeiro contacto com a programação."
      2:
        image: "notes/hoc1_2.jpg"
        text: "Estaremos a usar o Blockly, uma linguagem de programação visual onde podes arrastar e soltar blocos para escrever código."
      3:
        image: "notes/hoc1_3.jpg"
        text: 'Grande parte do código é digitado, mas o Blockly é visual. Cada bloco corresponde a uma linha de código "real".'
      4:
        image: "notes/hoc1_4.jpg"
        text: "Vais aprender os fundamentos da ciência da computação, conceitos que são usados para fazer aplicações para telemóveis ou até para controlar o robô que está em Marte."
      5:
        image: "notes/hoc1_5.jpg"
        text: "Um programa é um conjunto de instruções para o teu computador seguir."
      6:
        image: "notes/hoc1_6.jpg"
        text: "O objetivo do teu primeiro programa é conseguir que o Angry Bird atravesse um labirinto para chegar ao Porco Verde."
      7:
        image: "notes/hoc1_7.jpg"
        text: "O lado esquerdo é o labirinto onde o programa é executado. As instruções para cada quebra-cabeça estão abaixo do labirinto."
      8:
        image: "notes/hoc1_8.jpg"
        text: "A caixa de ferramentas do meio possui os comandos para o Angry Bird. Usarás estas para construir o teu código."
      9:
        image: "notes/hoc1_9.jpg"
        text: "À direita é a tua área de trabalho onde irás arrastar blocos da caixa de ferramentas para construir o teu programa. Para apagar um bloco, arrasta-o para o lixo no canto."
      10:
        image: "notes/hoc1_10.jpg"
        text: 'Cada bloco é uma instrução. Se arrastares o bloco "Avançar" para a tua área de trabalho e pressionares "Executar programa", o pássaro move-se um espaço no labirinto.'
      11:
        image: "notes/hoc1_11.jpg"
        text: "Para fazer mais do que uma ação, podes arrastar muitos blocos para a tua área de trabalho e juntá-los. O pássaro vai fazer os comandos de cima para baixo."
      12:
        image: "notes/hoc1_12.jpg"
        text: 'Se corres um programa e depois quiseres corrigi-lo e tentar novamente, pressiona o botão "Redefinir".'
      13:
        image: "notes/hoc1_13.jpg"
        text: "Vamos apanhar esses porcos!"
    artist_intro:
      1:
        image: "notes/stage5_1.jpg"
        text: "Hi, I'm JR! Every race car team need computer scientists to win. They analyze data from the car to make it go faster."
      2:
        image: "notes/stage5_2.jpg"
        text: "In these puzzles, you'll be an artist that draws a line behind them everywhere they go."
      3:
        image: "notes/stage5_3.jpg"
        text: 'This block says "move forward by 100 pixels." Pixels are just really tiny dots on your screen.'
      4:
        image: "notes/stage5_4.jpg"
        text: 'This block says "turn right by 90 degrees." This will turn your artist the same amount as the "turn" blocks in the maze puzzles.'
      5:
        image: "notes/stage5_5.jpg"
        text: "Click on the arrow in either of these blocks to change the amount the artist moves forward or turns. Play around to get familiar with these new blocks."
    farmer_intro:
      1:
        image: "notes/stage9_1.jpg"
        text: "Hi, I'm Paola! In these puzzles, you're a farmer who has to get her field completely flat to start planting crops."
      2:
        image: "notes/stage9_2.jpg"
        text: "You have to help her remove all the piles of dirt and fill in all the holes."
      3:
        image: "notes/stage9_3.jpg"
        text: "The new blocks remove 1 shovelful of dirt from a pile and fill in 1 shoveful of dirt to a hole."
      4:
        image: "notes/stage9_4.jpg"
        text: "The piles and holes are different sizes, so you have to tell the farmer how many shovelfuls to use."
    loop_times:
      1:
        image: "notes/hoc2_1.jpg"
        text: "Olá, sou o Mark! Vamos aprender sobre ciclos. Usando ciclos podes dizer um computador para repetir qualquer conjunto de ações repetidamente, milhares ou mesmo milhões de vezes."
      2:
        image: "notes/hoc2_2.jpg"
        text: "Neste puzzle, queremos que o pássaro se mova para a frente 5 espaços para chegar ao porco."
      3:
        image: "notes/hoc2_3.jpg"
        text: 'Podemos usar o novo bloco "repetir" para nos ajudar.'
      4:
        image: "notes/hoc2_4.jpg"
        text: 'Em vez de arrastares 5 blocos "avançar" ...'
      5:
        image: "notes/hoc2_5.jpg"
        text: 'Podemos colocar o bloco "avançar" dentro do bloco "repetir" e escrever um número no bloco para definir quantas vezes repetir.'
      6:
        image: "notes/hoc2_6.jpg"
        text: 'E isto é importante: podes colocar mais do que um comando dentro de um bloco "repetir".'
      7:
        image: "notes/hoc2_7.jpg"
        text: 'Diverte-te a usar o teu novo bloco "repetir"!'
    loop_until:
      1:
        image: "notes/hoc3_1.jpg"
        text: 'Olá, eu sou o Chris. Antes de entrar para os Miami Heat, estive na escola Georgia Tech a estudar ciência da computação. Vamos tentar o nosso novo bloco, o bloco "repeat até".'
      2:
        image: "notes/hoc3_2.jpg"
        text: "E se nós não soubéssemos quão longe o pássaro teve que se mover para chegar ao porco?"
      3:
        image: "notes/hoc3_3.jpg"
        text: 'Se pusermos um bloco "avançar" dentro do bloco "repetir até", o pássaro irá mover-se em frente ATÉ que chegue ao porco (ou choque contra o muro).'
      4:
        image: "notes/hoc3_4.jpg"
        text: 'E isto é importante: tal como anteriormente, podemos por múltiplos blocos dentro de um bloco "repetir até", e todos eles serão repetidos.'
    if:
      1:
        image: "notes/hoc4_1.jpg"
        text: 'Olá, eu sou o Bill! Vamos aprender um novo conceito fundamental: instrução "se". É assim que os computadores tomam decisões.'
      2:
        image: "notes/hoc4_2.jpg"
        text: 'Usas instruções "se" todos os dias. Antes de saíres de casa todas as manhãs, tu dizes  SE estiver a chover lá fora, vou precisar de levar o meu casaco.'
      3:
        image: "notes/hoc4_3.jpg"
        text: "Podemos dizer ao zombie para verificar SE há algum caminho à esquerda, e se ele encontrar o caminho à esquerda, podemos fazer com que ele vire nessa direção."
      4:
        image: "notes/hoc4_4.jpg"
        text: 'Para escrever código para este, vamos arrastar o nosso bloco "se" e inserimos dentro dele um bloco "virar esquerda".'
      5:
        image: "notes/hoc4_5.jpg"
        text: 'Agora, se pusermos um bloco "avançar" acima dele e um bloco "repetir" a envolver tudo, cada vez que o zombie se mova, irá verificar se existe algum caminho à esquerda e vira. O comando "repetir" é fundamental para verificar, a cada passo, se existe uma viragem.'
      6:
        image: "notes/hoc4_6.jpg"
        text: "Instruções se são muito importantes nas ciências da computação. Um dos primeiros programas que escrevi foi o jogo do galo, e há uma instrução que diz: SE a outra pessoa estiver perto de ganhar, bloquear o espaço que a permite ganhar."
      7:
        image: "notes/hoc4_7.jpg"
        text: 'Diverte-te usando o bloco "se"!'
    if_else:
      1:
        image: "notes/hoc5_1.jpg"
        text: 'Olá, o meu nome é Saloni. Eu uso as ciências da computação para resolver problemas em medicina e saúde. Vamos aprender o bloco "se-senão". É muito parecido com o bloco "se" mas tem mais uma parte no final que diz "senão".'
      2:
        image: "notes/hoc5_2.jpg"
        text: 'Se eu puser um bloco "avançar" no sitio que diz "faz" e um bloco "virar esquerda" onde diz "senão" isso quer dizer que o zombie irá escolher entre duas opções. SE existe um caminho em frente, o zombie irá avançar e caso não exista (não existe um caminho em frente) o zombie irá virar à esquerda.'
      3:
        image: "notes/hoc5_3.jpg"
        text: 'Tal como no bloco "se", podemos por blocos "se-senão" dentro de blocos "repetir" para que o zombie continue a ir em frente e o bloco "se-senão" irá verificar sempre se existe algum sítio para virar.'
      4:
        image: "notes/hoc5_4.jpg"
        text: "Agora, leva os zombie até onde eles pertencem!"
    function:
      1:
        image: "notes/stage13_1.jpg"
        text: "Hi, I'm Brina, an engineer at Instagram. A function is certain lines of code that you want to use over and over again, so instead of writing that code out everytime, you can just use one block."
      2:
        image: "notes/stage13_2.jpg"
        text: "We're going to learn how to define functions. Function definitions have a star in the corner. The name of the function is written on the top line."
      3:
        image: "notes/stage13_3.jpg"
        text: |-
          The blocks that go inside the definition tell us what it does. So this function definition is called "fill 5" and it's made up of a "repeat" block and a "fill" block.
      4:
        image: "notes/stage13_4.jpg"
        text: |-
          The definition sits on the workspace, but our farmer won't run the function until we drag out our "fill 5 function" block from functions category.
      5:
        image: "notes/stage13_5.jpg"
        text: |-
          Let's put the "fun" back in "FUNction!" 
    loop_while:
      1:
        image: "notes/stage9_5.jpg"
        text: |-
          Hi, I'm Makinde! Let's learn about the "while block." 
      2:
        image: "notes/stage9_6.jpg"
        text: 'The "while block" will do whatever you put inside it AS LONG AS the statment on the top is TRUE.'
      3:
        image: "notes/stage9_7.jpg"
        text: "For example, if the farmer is standing on a pile, she will continue to remove 1 shoveful WHILE there is still a pile beneath her."
    loop_for:
      1:
        image: "notes/stage11_1.jpg"
        text: "Hi, I'm Trina, and I work for Pixar. I've worked on a bunch of movies, including Shrek."
      2:
        image: "notes/stage11_2.jpg"
        text: 'This is our new "counter" loop. It will perform actions over and over again and you can make the actions change slightly each time.'
      3:
        image: "notes/stage11_3.jpg"
        text: 'In this example, our "counter" loop says "count with counter from 50 to 90 by 10" and inside it, we have our "draw a square" block. Drag the "counter" block from the "Variables" section into the "length" spot.'
      4:
        image: "notes/stage11_4.jpg"
        text: "This means our artist is going to draw a square that has 50 pixel length sides, then it will add 10 to that and draw a square with 60 pixel length sides. Then it will keep adding 10 and drawing squares until it reaches 90. So we'll have squares of 50, 60, 70, 80, and 90."
    parameters:
      1:
        image: "notes/stage15_1.jpg"
        text: "Hi, I'm Janete, and I'm an engineer at Zynga."
      2:
        image: "notes/stage15_2.jpg"
        text: "What if we want to draw a bunch of triangles and have their lengths be different sizes?"
      3:
        image: "notes/stage15_3.jpg"
        text: "We could write all that code out by hand or we can use a function with parameters."
      4:
        image: "notes/stage15_4.jpg"
        text: 'To do this, click the blue star on the "draw a triangle" function definition. Then drag "input name" into the "input" block.'
      5:
        image: "notes/stage15_5.jpg"
        text: |-
          Then if you write "length" in the spot where it says "x" and press "Enter" you'll create a length input for your function.
      6:
        image: "notes/stage15_6.jpg"
        text: 'Then click on the star. Now, you want to click on the variables category and drag the "length" block into the "move forward" block of your function definition. And drag away the old number block.'
      7:
        image: "notes/stage15_7.jpg"
        text: 'To use your function with parameters, click on the functions category and drag out your "draw a triangle with length" function.'
      8:
        image: "notes/stage15_8.jpg"
        text: "Now you can use the math block to input different numbers to draw triangles of different sizes."
    hoc_wrapup:
      1:
        image: "notes/hoc6_1.jpg"
        text: "Parabéns! Com o último enigma que resolveste, acabaste de escrever código que pode dizer a qualquer robô como encontrar o seu caminho através de um labirinto de não-ramificação ou túnel de qualquer comprimento, sendo um zombie, um pássaro, uma missão a Marte ou até mesmo um carro de auto-condução."
      2:
        image: "notes/hoc6_2.jpg"
        text: "Os conceitos básicos que usaste são o coração de todos os programas ou apps que irás utilizar.  Aprendemos sobre ciclos de repetição, declarações repita até, declarações se e se-então."
      3:
        image: "notes/hoc6_3.jpg"
        text: "Se gostaste da tua primeira hora de código, visita code.org e continua a tua educação em ciências da computação! Assim que completares as 20 horas de curso, irás dominar as bases da programação e poderás começar a escrever aplicações para telemóveis, instruções para robôs, jogos, etc."
      4:
        image: "notes/hoc6_4.jpg"
        text: "A tecnologia está a mudar tudo o que fazemos e não importa se és novo ou menos novo: a programação é divertida, é criativa e toda a gente pode aprender!"
    20_wrapup:
      1:
        image: "notes/bird.png"
        text: "Mostrar notas vem em breve!"
