"el":
  slides:
    maze_intro:
      1:
        image: "notes/hoc1_1.png"
        text: 'Καλώς ήρθατε στην 1η  συνεδρία που αφορά στη δράση "One Hour of Code"! Ας ξεκινήσουμε παίρνοντας μια πρώτη γεύση  προγραμματισμού.'
      2:
        image: "notes/hoc1_2.png"
        text: "Θα χρησιμοποιήσουμε το  Blockly, μια οπτική γλώσσα προγραμματισμού στην οποία προγραμματίζετε σύροντας και αποθέτοντας τμήματα (μπλοκ) που συνθέτουν τον κώδικα του προγράμματός σας."
      3:
        image: "notes/hoc1_3.png"
        text: "Στα περισσότερα προγράμματα πρέπει κάποιος να πληκτρολογήσει τον κώδικα του προγράμματος, αλλά στο Blockly ο προγραμματισμός είναι οπτικός. Κάθε μπλοκ αντιστοιχεί σε μια \"πραγματική\" γραμμή κώδικα ."
      4:
        image: "notes/hoc1_4.png"
        text: "Θα μάθετε τις βασικές αρχές της επιστήμης των υπολογιστών, έννοιες που χρησιμοποιούνται από την κατασκευή εφαρμογών για υπολογιστές μέχρι τον έλεγχο ρομπότ για την εξερεύνηση πλανητών."
      5:
        image: "notes/hoc1_5.png"
        text: "Το πρόγραμμα είναι ένα σύνολο οδηγιών που πρέπει να εκτελέσει ο υπολογιστή."
      6:
        image: "notes/hoc1_6.png"
        text: "Ο στόχος του πρώτου προγράμματος είναι να καθοδηγήσει το πουλί (Angry Bird)  ώστε να κινηθεί μέσα στο λαβύρινθο και να πιάσει το πράσινο γουρουνάκι."
      7:
        image: "notes/hoc1_7.png"
        text: "Στο αριστερό μέρος της οθόνης εμφανίζεται ο λαβύρινθος μέσα στον οποίο εκτελείται το πρόγραμμα. Οι εντολές για κάθε puzzle εμφανίζονται κάτω από το λαβύρινθο."
      8:
        image: "notes/hoc1_8.png"
        text: "Στη μεσαία εργαλειοθήκη εμφανίζονται οι εντολές που μπορεί να εκτελέσει το πουλάκι. Μπορείτε να χρησιμοποιήσετε αυτές τις εντολές για να κατασκευάσετε το δικό σας πρόγραμμα που λύνει το γρίφο."
      9:
        image: "notes/hoc1_9.png"
        text: "Στα δεξιά είναι ο χώρος εργασίας σας, όπου θα μεταφέρετε πλακίδια από την εργαλειοθήκη για την δημιουργία του προγράμματός σας. Για να διαγράψετε ένα πλακίδιο, σύρετε στα σκουπίδια στην γωνία."
      10:
        image: "notes/hoc1_10.png"
        text: "Κάθε πλακίδιο είναι μια εντολή. Εάν σύρετε το πλακίδιο \"Μετακίνηση προς τα εμπρός\" στο χώρο εργασίας σας και πατήστε το \"Εκτέλεση Προγράμματος\", το πουλί κάνει ένα βήμα στο λαβύρινθο."
      11:
        image: "notes/hoc1_11.png"
        text: "Για να κάνετε περισσότερες από μία ενέργειες, μπορείτε να σύρετε πολλά πλακίδια στο χώρο εργασίας σας και να τα τοποθετήσετε μαζί. Το πουλί θα κάνει τις εντολές από την κορυφή προς τα κάτω."
      12:
        image: "notes/hoc1_12.png"
        text: "Εάν εκτελέσετε ένα πρόγραμμα και θέλετε να το διορθώσετε και να προσπαθήστε ξανά, πατήστε το κουμπί \"Επαναφορά\"."
      13:
        image: "notes/hoc1_13.png"
        text: "Πάμε να πιάσουμε εκείνα τα γουρουνάκια!"
    artist_intro:
      1:
        image: "notes/bird.png"
        text: "Προβολή σημειώσεων, προσεχώς!"
    farmer_intro:
      1:
        image: "notes/bird.png"
        text: "Προβολή σημειώσεων, προσεχώς!"
    loop_times:
      1:
        image: "notes/hoc2_1.png"
        text: "Γεια σου, είμαι ο Μάρκος! Ας μάθουμε για βρόχους. Χρησιμοποιώντας βρόχους μπορείτε να πείτε σε έναν υπολογιστή να επαναλάβει κάθε σύνολο ενεργειών ξανά και ξανά, χιλιάδες ή ακόμη και δισεκατομμύρια φορές."
      2:
        image: "notes/hoc2_2.png"
        text: "Σε αυτό το παζλ, θέλουμε να κάνουμε το πουλί να μετακινηθεί προς τα εμπρός 5 βήματα για να πιάσει το γουρούνι."
      3:
        image: "notes/hoc2_3.png"
        text: "Μπορούμε να χρησιμοποιήσουμε το νέο πλακίδιο «επανάληψης» για να μας βοηθήσει."
      4:
        image: "notes/hoc2_4.png"
        text: "Αντί να χρησιμοποιήσετε 5 πλακίδια \"Μετακίνηση προς τα εμπρός\"..."
      5:
        image: "notes/hoc2_5.png"
        text: "Μπορούμε να βάλουμε το πλακίδιο \"Μετακίνηση προς τα εμπρός\" στο εσωτερικό του πλακιδίου \"Επανάληψη\" και να γράψουμε έναν αριθμό στο πλακίδιο για να του πούμε πόσες φορές να το επαναλάβει."
      6:
        image: "notes/hoc2_6.png"
        text: 'Και αυτό είναι σημαντικό: μπορείτε να βάλετε περισσότερες από μία εντολές μέσα σε ένα πλακίδιο  "Επανάληψης".'
      7:
        image: "notes/hoc2_7.png"
        text: "Απολαύσετε τη χρήση του νέου πλακιδίου «επανάληψης»!"
    loop_until:
      1:
        image: "notes/hoc3_1.png"
        text: |-
          Hi, I'm Chris. Before joining the Miami Heat, I went to Georgia Tech to study Computer Science. Let's try our new block, the "repeat until" block.
      2:
        image: "notes/hoc3_2.png"
        text: "What if we didn't know how far the bird had to move to get to the pig?"
      3:
        image: "notes/hoc3_3.png"
        text: "If we put a \"move forward\" block inside the \"repeat until\" block, the bird will move forward UNTIL it reaches the pig (or crashes into a wall)."
      4:
        image: "notes/hoc3_4.png"
        text: 'And this is important: ;just like before, we can put multiple blocks inside the "repeat until" block, and they will all be repeated.'
    if:
      1:
        image: "notes/hoc4_1.png"
        text: |-
          Hi, I'm Bill! Let's learn a new fundamental concept: "If" statements. This is how computers make decisions.
      2:
        image: "notes/hoc4_2.png"
        text: |-
          You use "If" statments yoruself everday. Before you go outside each morning, you say IF it's raining outside, I need to wear my jacket.
      3:
        image: "notes/hoc4_3.png"
        text: "We can tell the zombie to check IF there's path to the left, and if he finds a path to the left, we can have him turn in that direction."
      4:
        image: "notes/hoc4_4.png"
        text: |-
          To write the code for this, let's drag out our "if" block and put a "turn left" block inside it.
      5:
        image: "notes/hoc4_5.png"
        text: |-
          Now, if we put a "move forward" block above it and a "repeat" block around everything, each time the zombie moves, he'll check if there's a path to the left and turn. The "repeat" command is critical, to check for a turn at every step.
      6:
        image: "notes/hoc4_6.png"
        text: "If statements are really important in computer science. One of the first programs I wrote was a tic-tac-toe game, and there was a If statement that said IF the other person is about to win, block the spot that lets them win."
      7:
        image: "notes/hoc4_7.png"
        text: "Have fun using the \"if\" block!"
    if_else:
      1:
        image: "notes/hoc5_1.png"
        text: |-
          Hi, my name is Saloni. I use computer science to help solve problems in health and medicine. Let's learn about the "if else" block. It looks like the "if" block, but it has an extra part at the end that says "else".
      2:
        image: "notes/hoc5_2.png"
        text: |-
          If I put a "move forward" block in the spot where it says "do" and a "turn left" block where it says "else" that means that the zombie will choose between 2 options. IF there is a path ahead, the zombie will move forward, and OTHERWISE (there isn't a path ahead), the zombie will turn left.
      3:
        image: "notes/hoc5_3.png"
        text: |-
          Just like the "if" block, we can put "if else" blocks inside a "repeat" blocks so that the zombie keeps moving and the "if else" block will keep checking if there's somewhere to turn.
      4:
        image: "notes/hoc5_4.png"
        text: "Now, get those zombies where they belong!"
    function:
      1:
        image: "notes/bird.png"
        text: "Show notes coming soon!"
    loop_while:
      1:
        image: "notes/bird.png"
        text: "Show notes coming soon!"
    loop_for:
      1:
        image: "notes/bird.png"
        text: "Show notes coming soon!"
    parameters:
      1:
        image: "notes/bird.png"
        text: "Show notes coming soon!"
    hoc_wrapup:
      1:
        image: "notes/hoc6_1.png"
        text: "Congratulations! With the last puzzle you solved, you just wrote code that can tell ANY robot how to find it's way through a non-branching maze or tunnel of any length, whether it's a zombie, a bird, a mars rover, or even a self-driving car."
      2:
        image: "notes/hoc6_2.png"
        text: "The basic concepts you used are at the heart of every program or app you'll ever try.  We learned about repeat loops, repeat until statements, if statements, and if else statements."
      3:
        image: "notes/hoc6_3.png"
        text: "If you liked your first hour of code, visit code.org to continue your education into computer science! Once you complete our 20 hour course, you'll have mastered the basics of programming, and can start learning how to write phone apps, robot instructions, games, you name it."
      4:
        image: "notes/hoc6_4.png"
        text: "Technology is changing everything we do and it doesn't matter if you're young or old: programming is fun, it's creative, and anyone can learn!"
    20_wrapup:
      1:
        image: "notes/bird.png"
        text: "Show notes coming soon!"
