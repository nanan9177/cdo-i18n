"ko":
  slides:
    maze_intro:
      1:
        image: "notes/hoc1_1.jpg"
        text: "Hour of code 에 오신 것을 환영합니다. 프로그래밍의 재미를 느껴 보세요."
      2:
        image: "notes/hoc1_2.jpg"
        text: "코드를 작성하기 위해, 드래그 & 드롭 방식의 비주얼 프로그래밍 언어인 블러클리(Blockly)를 사용합니다."
      3:
        image: "notes/hoc1_3.jpg"
        text: "대부분의 프로그래밍언어들은 텍스트로 작성해야 하지만, 블러클리는 그래픽 방식의 블럭들을 이용해 프로그래밍 합니다. 각 각의 블럭들은 실제 프로그래밍언어(자바스크립트) 코드와 1:1로 대응합니다."
      4:
        image: "notes/hoc1_4.jpg"
        text: "화성 탐사선 제어 프로그램과 같이 어디서나 사용될 수 있는, 프로그램들을 만들기 위해 필요한기초적인 개념들과, 컴퓨터과학(정보과학)의 프로그래밍과 알고리즘에 대해 간단히 경험할 수 있습니다."
      5:
        image: "notes/hoc1_5.jpg"
        text: "프로그램은 컴퓨터가 실행해야하는 명령들의 집합이라고 할 수 있습니다."
      6:
        image: "notes/hoc1_6.jpg"
        text: "처음 만드는 프로그램의 목표는, 앵그리버드를 움직여 초록 돼지를 잡는 것 입니다."
      7:
        image: "notes/hoc1_7.jpg"
        text: "왼쪽은 프로그램이 실행되는 미로입니다. 각 퍼즐의 목표들은 미로의 아래쪽에 나타납니다."
      8:
        image: "notes/hoc1_8.jpg"
        text: "가운데 도구상자는 앵그리버드를 움직이기 위한 명령들이 있습니다. 이 블럭들을 사용해 프로그램의 코드를 만들 수 있습니다."
      9:
        image: "notes/hoc1_9.jpg"
        text: "오른쪽은, 프로그램을 만들기 위해 도구 상자에서 블럭들을 꺼내어 놓는 곳입니다. 블럭을 삭제하려면, 구석에 있는 휴지통에 버리면 됩니다."
      10:
        image: "notes/hoc1_10.jpg"
        text: '하나의 블럭은 하나의 명령을 의미합니다. "앞으로 이동하기" 블럭을 오른쪽의 프로그래밍 영역에 가져다 놓은 후, "프로그램 실행"을 누르면, 앵그리버드가 한 칸 앞으로 이동합니다.'
      11:
        image: "notes/hoc1_11.jpg"
        text: "동작을 여러 번 실행시키기 위해서는, 여러 개의 블럭을 가져다 놓고, 모양을 맞추어 붙이면 됩니다. 앵그리버드는 위에서 아래로 블럭을 따라가며, 순서대로 명령을 실행합니다."
      12:
        image: "notes/hoc1_12.jpg"
        text: '프로그램을 실행시켜 본 후, 수정하거나 다시 실행 하고 싶으면, "처음 상태로" 버튼을 누르면 됩니다.'
      13:
        image: "notes/hoc1_13.jpg"
        text: "자! 이제, 초록 돼지를 잡으러 갑시다!"
    artist_intro:
      1:
        image: "notes/bird.png"
        text: "프레젠테이션 준비 중!"
    farmer_intro:
      1:
        image: "notes/bird.png"
        text: "프레젠테이션 준비 중!"
    loop_times:
      1:
        image: "notes/hoc2_1.jpg"
        text: "안녕하세요! 여러분? 저는 마크 입니다. 반복 실행(loop)에 대해 살펴 볼까요? 반복 실행 구조를 사용해, 원하는 작업을 수 천 번... 수 백 만 번, 반복하도록 할 수 있습니다."
      2:
        image: "notes/hoc2_2.jpg"
        text: '이 퍼즐에서는 앵그리버드가 초록 돼지를 잡을 수 있도록, 5번 "앞으로 이동" 시켜야합니다.'
      3:
        image: "notes/hoc2_3.jpg"
        text: '새로운 "반복(횟수)" 블럭을 이용해서 해결 할 수 있습니다.'
      4:
        image: "notes/hoc2_4.jpg"
        text: '"앞으로 이동하기" 블럭 5개를 하나로 붙여 사용하는 대신...'
      5:
        image: "notes/hoc2_5.jpg"
        text: '"앞으로 이동하기" 블럭 1개를  "반복(횟수)" 블럭 안에 집어 넣고, 반복할 횟수를 숫자로 입력하면 됩니다.'
      6:
        image: "notes/hoc2_6.jpg"
        text: '그리고 이렇게 하는 것은 매우 중요합니다: 여러 개의 명령 블럭을 "반복(횟수)" 블럭 안에 넣어 실행시킬 수 있기 때문입니다.'
      7:
        image: "notes/hoc2_7.jpg"
        text: '"반복(횟수)" 블럭을 잘 사용해 보세요!'
    loop_until:
      1:
        image: "notes/hoc3_1.jpg"
        text: '안녕하세요? 저는 크리스 입니다. 저는 마이애미 히트(Miami Heat)에서 일하기 전에, 조지아 공과대학(Georgia Tech)에서 컴퓨터과학(Computer Science) 분야를 공부했습니다. 새로운 블럭인 "반복(~할 때까지)" 블럭을 살펴보도록 하겠습니다.'
      2:
        image: "notes/hoc3_2.jpg"
        text: "앵그리버드가 초록 돼지를 잡기 위해, 이동해야하는 거리를 모른다면 어떻게 해야 할까요?"
      3:
        image: "notes/hoc3_3.jpg"
        text: '"반복(~할 때까지)" 블럭 안에 "앞으로 이동하기" 블럭을 넣으면, 초록 돼지를 붙잡을 때 까지... 앵그리버드가 전진하게 됩니다.'
      4:
        image: "notes/hoc3_4.jpg"
        text: '이렇게 하는 것은 매우 중요합니다: 이전과 마찬가지로, 여러 개의 블럭들을 "반복(~할 때까지)" 블럭 안에 넣어서, 원하는 작업들을 반복시킬 수 있기 때문입니다.'
    if:
      1:
        image: "notes/hoc4_1.jpg"
        text: '안녕하세요? 저는 빌 입니다! 이제 새로운 기초 개념들을 배워 봅시다: "만약" 명령문입니다. 이 명령문을 이용해서, 컴퓨터가 생각하는 것처럼 만들 수 있습니다.'
      2:
        image: "notes/hoc4_2.jpg"
        text: '"만약"? 이라는 생각은 매우 일상적입니다. "만약"에 밖에 비가 내리면? 우산을 가지고 나가야 합니다.'
      3:
        image: "notes/hoc4_3.jpg"
        text: '좀비에게, "앞에 길이 있는지", "왼쪽에 길이 있는지"를 먼저 확인하게 한 후, 그 방향으로 회전시킬 수 있습니다.'
      4:
        image: "notes/hoc4_4.jpg"
        text: '그렇게 만들려면, "만약" 블럭 안에 "왼쪽으로 회전" 블럭을 넣으면 됩니다.'
      5:
        image: "notes/hoc4_5.jpg"
        text: '그 다음, "전진" 블럭을 그 위에 붙이고, "반복(횟수)" 블럭 안에 넣으면.. 좀비가 움직일 때마다 길을 확인한 다음, 그 쪽으로 움직이게 할 수 있습니다. "반복(횟수)" 명령 안에서, 움직일 때마다 이동 방향을 결정하도록 하는 작업은 매우 중요합니다.'
      6:
        image: "notes/hoc4_6.jpg"
        text: '컴퓨터과학(정보과학)에서 "만약" 명령은  매우 중요합니다. 제가 처음 만들었던 프로그램 중 하나가, 3*3 크기의 표 안에 O와 X를 번갈아 작성해 넣는 틱택토(tic-tac-toe) 게임이었는데, 그 프로그램에서, 어떤 사람이 이겼는지를 "만약" 명령이 결정해 주었습니다. "만약" 블럭은 이긴 사람을 결정하는 역할을 해 줄 수 있습니다.'
      7:
        image: "notes/hoc4_7.jpg"
        text: '"만약" 블럭을 재미있게 사용해 보세요!'
    if_else:
      1:
        image: "notes/hoc5_1.jpg"
        text: '안녕하세요? 저는 살로니 에요. 저는 건강/의료 분야에서 컴퓨터과학(정보과학)에서 배운 것들을 활용했어요. "만약.. 아니면" 블럭을 어떻게 사용할 수 있는지 살펴보도록 하죠. "만약" 블럭과 비슷하지만, "아니면" 부분이 더 있어요.'
      2:
        image: "notes/hoc5_2.jpg"
        text: '"실행" 부분에 "전진" 블럭을 넣고, "왼쪽으로 회전" 블럭을 "아니면"이라고 쓰여진 부분에 넣으면, 좀비는 2가지 경우 중에서 하나만 선택하게 되요. 만약 앞에 길이 있으면, "전진"하고, 아니면(즉, 앞에 길이 없으면), "왼쪽으로 회전"하게 되요'
      3:
        image: "notes/hoc5_3.jpg"
        text: '"만약" 블럭하고 비슷하게 생긴, "만약... 아니면" 블럭들을 "반복(횟수)" 블럭 안에 넣으면, "만약... 아니면" 블럭을 이용해서, 전진 해야하는지? 왼쪽으로 회전해야하는지? 를 판단해 계속 움직이게 되는 거에요.'
      4:
        image: "notes/hoc5_4.jpg"
        text: "자, 이제 좀비들에게 가봅시다!"
    function:
      1:
        image: "notes/bird.png"
        text: "프레젠테이션 준비 중!"
    loop_while:
      1:
        image: "notes/bird.png"
        text: "프레젠테이션 준비 중!"
    loop_for:
      1:
        image: "notes/bird.png"
        text: "프레젠테이션 준비 중!"
    parameters:
      1:
        image: "notes/bird.png"
        text: "프레젠테이션 준비 중!"
    hoc_wrapup:
      1:
        image: "notes/hoc6_1.jpg"
        text: "축하합니다! 여러분은 마지막 퍼즐을 해결함으로서, 복잡한 미로/동굴/터널 속에서도 스스로 길을 찾아 움직일 수 있는 로봇을 만들 수 있게 되었습니다. 좀비, 새, 화성탐사선, 스스로 움직이는 자동차 등에도 모두 적용시킬 수 있겠죠?"
      2:
        image: "notes/hoc6_2.jpg"
        text: '지금까지 사용한 기초적인 개념들은, 매일 사용하는 앱(응용프로그램)들을 만들어 내는 가장 기본적인 방법들입니다. 지금까지 반복 실행을 위한, "반복(횟수)", "반복(~할 때까지)" 명령과 선택 실행을 위한 "만약", "만약....아니면" 명령들에 대해 배워 보았습니다.'
      3:
        image: "notes/hoc6_3.jpg"
        text: "처음 해 본, Hour of Code 가 재미있으면, http://code.org 를 통해 컴퓨터과학(정보과학)의 기초개념들을 더 배워보세요!  그 과정을 끝내고 나면, 프로그래밍을 위한 기초적인 지식을 모두 배울 수 있게 됩니다. 여러분들은 스마트폰 앱 만들기, 로봇 조종, 게임 만들기 등, 원하는 것을 모두 할 수 있는 기본적인 지식들을 얻게 되는 거에요!"
      4:
        image: "notes/hoc6_4.jpg"
        text: "컴퓨터과학(정보과학)에서 배우는 지식과 기술들은 모든 사람들의 생활 방식을 바꿔가고 있습니다 : 프로그래밍은 재미있고, 창의적인 과정이며, 누구나 배울 수 있습니다!"
    20_wrapup:
      1:
        image: "notes/bird.png"
        text: "프레젠테이션 준비 중!"
