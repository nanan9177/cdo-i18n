"no":
  slides:
    maze_intro:
      1:
        image: "notes/hoc1_1.jpg"
        text: "Velkommen til din første kodetime! La oss dykke rett inn i ditt første møte med programmering."
      2:
        image: "notes/hoc1_2.jpg"
        text: "Vi skal bruke Blockly, et visuelt programmeringsspråk hvor du drar og slipper blokkene for å skrive kode."
      3:
        image: "notes/hoc1_3.jpg"
        text: 'De fleste programmeringsspråk bruker tekst, men Blockly er visuelt. Hver blokk tilsvarer en "ekte" kodelinje.'
      4:
        image: "notes/hoc1_4.jpg"
        text: "Du vil lære grunnleggende informatikk, med begreper som brukes overalt, helt fra å skrive apper til å lage programmer for å styre Mars-roveren."
      5:
        image: "notes/hoc1_5.jpg"
        text: "Et program er et sett med instruksjoner som datamaskinen skal følge."
      6:
        image: "notes/hoc1_6.jpg"
        text: 'Målet med det første programmet er å få en "Angry Bird" gjennom en labyrint slik at den treffer en grønn gris.'
      7:
        image: "notes/hoc1_7.jpg"
        text: "Til venstre er labyrinten der programmet kjøres. Instruksjonene for hver oppgave er under labyrinten."
      8:
        image: "notes/hoc1_8.jpg"
        text: 'Den midtre verktøykassen har kommandoene for "Angry Bird". Du vil bruke disse for å bygge koden.'
      9:
        image: "notes/hoc1_9.jpg"
        text: "Til høyre er arbeidsområdet hvor du skal trekke blokker fra verktøykassen til å bygge programmet med. Hvis du vil slette en blokk, drar du den til papirkurven i hjørnet."
      10:
        image: "notes/hoc1_10.jpg"
        text: 'Hver blokk er en instruksjon. Hvis du drar en "fremover" blokk til arbeidsområdet og trykker "Kjør programmet", flyttes fuglen en plass på labyrinten.'
      11:
        image: "notes/hoc1_11.jpg"
        text: "For å utføre mer enn én handling, kan du dra mange blokker til arbeidsområdet og legge dem sammen. Fuglen vil utføre kommandoene fra topp til bunn."
      12:
        image: "notes/hoc1_12.jpg"
        text: 'Hvis du kjører et program og ønsker å fikse det for å prøve på nytt, kan du trykke på "Reset"-knappen.'
      13:
        image: "notes/hoc1_13.jpg"
        text: "La oss gå og ta de grisene!"
    artist_intro:
      1:
        image: "notes/stage5_1.jpg"
        text: "Hi, I'm JR! Every race car team need computer scientists to win. They analyze data from the car to make it go faster."
      2:
        image: "notes/stage5_2.jpg"
        text: "In these puzzles, you'll be an artist that draws a line behind them everywhere they go."
      3:
        image: "notes/stage5_3.jpg"
        text: 'This block says "move forward by 100 pixels." Pixels are just really tiny dots on your screen.'
      4:
        image: "notes/stage5_4.jpg"
        text: 'This block says "turn right by 90 degrees." This will turn your artist the same amount as the "turn" blocks in the maze puzzles.'
      5:
        image: "notes/stage5_5.jpg"
        text: "Click on the arrow in either of these blocks to change the amount the artist moves forward or turns. Play around to get familiar with these new blocks."
    farmer_intro:
      1:
        image: "notes/stage9_1.jpg"
        text: "Hi, I'm Paola! In these puzzles, you're a farmer who has to get her field completely flat to start planting crops."
      2:
        image: "notes/stage9_2.jpg"
        text: "You have to help her remove all the piles of dirt and fill in all the holes."
      3:
        image: "notes/stage9_3.jpg"
        text: "The new blocks remove 1 shovelful of dirt from a pile and fill in 1 shoveful of dirt to a hole."
      4:
        image: "notes/stage9_4.jpg"
        text: "The piles and holes are different sizes, so you have to tell the farmer how many shovelfuls to use."
    loop_times:
      1:
        image: "notes/hoc2_1.jpg"
        text: "Hei, jeg heter Mark! La oss lære om løkker. Med løkker kan du skal be datamaskinen om å gjenta et sett av handlinger igjen og igjen, tusenvis eller milliarder ganger."
      2:
        image: "notes/hoc2_2.jpg"
        text: "I denne oppgaven ønsker vi å flytte fuglen frem 5 plasser for å ta grisen."
      3:
        image: "notes/hoc2_3.jpg"
        text: 'Vi kan bruke den nye "gjenta" blokken for å hjelpe oss.'
      4:
        image: "notes/hoc2_4.jpg"
        text: 'I stedet for å dra ut 5 "fremover" blokker...'
      5:
        image: "notes/hoc2_5.jpg"
        text: 'Vi kan sette "fremover" blokken inne i "gjenta"-blokken og skrive et nummer i blokken å fortelle den hvor mange ganger det skal gjentas.'
      6:
        image: "notes/hoc2_6.jpg"
        text: 'Og dette er viktig: Du kan sette mer enn én kommando i en "gjenta"-blokk.'
      7:
        image: "notes/hoc2_7.jpg"
        text: 'Kos deg med å bruke den nye "gjenta" blokken!'
    loop_until:
      1:
        image: "notes/hoc3_1.jpg"
        text: 'Hei, er jeg Chris. Før jeg startet i Miami Heat, studerte jeg informatikk. La oss prøve våre ny blokk, "Gjenta til" blokken.'
      2:
        image: "notes/hoc3_2.jpg"
        text: "Hva hvis vi ikke visste hvor langt fuglen måtte bevege seg for å komme til grisen?"
      3:
        image: "notes/hoc3_3.jpg"
        text: 'Hvis vi setter en "fremover" blokk inne i en "Gjenta til" blokk, vil fuglen bevege seg fremover til den når grisen (eller krasjer inn i en vegg).'
      4:
        image: "notes/hoc3_4.jpg"
        text: 'Og dette er viktig: Akkurat som før kan vi sette flere blokker inni "Gjenta til" blokken, og de vil alle bli gjentatt.'
    if:
      1:
        image: "notes/hoc4_1.jpg"
        text: "Hei, er jeg Bill! La oss lære et nytt grunnleggende konsept: hvis-uttrykk. Dette er hvordan datamaskiner tar beslutninger."
      2:
        image: "notes/hoc4_2.jpg"
        text: 'Du bruker "hvis"-uttrykk selv hver dag. Før du går ut hver morgen sier du: "HVIS det regner ute må jeg ta på meg jakke".'
      3:
        image: "notes/hoc4_3.jpg"
        text: "Vi kan be zombien om å sjekke om det er en sti til venstre. Hvis han finner en sti der, kan vi be han snu i den retningen."
      4:
        image: "notes/hoc4_4.jpg"
        text: 'For å skrive koden for dette, må vi dra ut "Hvis"-blokken og sette en "venstre"-blokk inni den.'
      5:
        image: "notes/hoc4_5.jpg"
        text: 'Hvis vi hver gang zombien flytter på seg setter en "fremover" blokk over den, og en "gjenta" blokk rundt alt, vil han nå sjekke om det er en sti til venstre og i så fall snu dit. Kommandoen "gjenta" er viktig for å se etter sti etter hvert skritt.'
      6:
        image: "notes/hoc4_6.jpg"
        text: "Hvis-setninger er veldig viktige i programmering. En av de første programmene jeg skrev, var et tripp-trapp-tresko-spill. Der var det det en hvis-setning som sa hvis den andre personen holdt på å vinne, måtte programmet blokkere posisjonen som ville la han seire."
      7:
        image: "notes/hoc4_7.jpg"
        text: "Ha det gøy med hvis-blokker!"
    if_else:
      1:
        image: "notes/hoc5_1.jpg"
        text: 'Hei, jeg heter Saloni. Jeg bruker programmering for å løse helseproblemer. La oss lære om "hvis-ellers" blokken. Den ser ut som en "hvis"-blokk, men har en ekstra del på slutten som sier "ellers".'
      2:
        image: "notes/hoc5_2.jpg"
        text: 'Hvis jeg setter en "fremover" blokk på plass der det står "gjøre" og en "snu til venstre" blokk der det står "ellers", betyr det at zombien vil velge mellom to alternativer. Hvis det er en vei fremover, vil den gå dit, og ellers vil den svinge til venstre.'
      3:
        image: "notes/hoc5_3.jpg"
        text: 'Akkurat som "Hvis" blokken, kan vi sette "hvis ellers" blokker innenfor en "gjenta" blokk slik at zombien fortsetter å flytte på seg.  "hvis ellers" blokken vil fortsette å se etter nye retninger å dreie til.'
      4:
        image: "notes/hoc5_4.jpg"
        text: "Nå får du vise zombiene hvor de hører hjemme!"
    function:
      1:
        image: "notes/stage13_1.jpg"
        text: "Hi, I'm Brina, an engineer at Instagram. A function is certain lines of code that you want to use over and over again, so instead of writing that code out everytime, you can just use one block."
      2:
        image: "notes/stage13_2.jpg"
        text: "We're going to learn how to define functions. Function definitions have a star in the corner. The name of the function is written on the top line."
      3:
        image: "notes/stage13_3.jpg"
        text: |-
          The blocks that go inside the definition tell us what it does. So this function definition is called "fill 5" and it's made up of a "repeat" block and a "fill" block.
      4:
        image: "notes/stage13_4.jpg"
        text: |-
          The definition sits on the workspace, but our farmer won't run the function until we drag out our "fill 5 function" block from functions category.
      5:
        image: "notes/stage13_5.jpg"
        text: |-
          Let's put the "fun" back in "FUNction!" 
    loop_while:
      1:
        image: "notes/stage9_5.jpg"
        text: |-
          Hi, I'm Makinde! Let's learn about the "while block." 
      2:
        image: "notes/stage9_6.jpg"
        text: 'The "while block" will do whatever you put inside it AS LONG AS the statment on the top is TRUE.'
      3:
        image: "notes/stage9_7.jpg"
        text: "For example, if the farmer is standing on a pile, she will continue to remove 1 shoveful WHILE there is still a pile beneath her."
    loop_for:
      1:
        image: "notes/stage11_1.jpg"
        text: "Hi, I'm Trina, and I work for Pixar. I've worked on a bunch of movies, including Shrek."
      2:
        image: "notes/stage11_2.jpg"
        text: 'This is our new "counter" loop. It will perform actions over and over again and you can make the actions change slightly each time.'
      3:
        image: "notes/stage11_3.jpg"
        text: 'In this example, our "counter" loop says "count with counter from 50 to 90 by 10" and inside it, we have our "draw a square" block. Drag the "counter" block from the "Variables" section into the "length" spot.'
      4:
        image: "notes/stage11_4.jpg"
        text: "This means our artist is going to draw a square that has 50 pixel length sides, then it will add 10 to that and draw a square with 60 pixel length sides. Then it will keep adding 10 and drawing squares until it reaches 90. So we'll have squares of 50, 60, 70, 80, and 90."
    parameters:
      1:
        image: "notes/stage15_1.jpg"
        text: "Hi, I'm Janete, and I'm an engineer at Zynga."
      2:
        image: "notes/stage15_2.jpg"
        text: "What if we want to draw a bunch of triangles and have their lengths be different sizes?"
      3:
        image: "notes/stage15_3.jpg"
        text: "We could write all that code out by hand or we can use a function with parameters."
      4:
        image: "notes/stage15_4.jpg"
        text: 'To do this, click the blue star on the "draw a triangle" function definition. Then drag "input name" into the "input" block.'
      5:
        image: "notes/stage15_5.jpg"
        text: |-
          Then if you write "length" in the spot where it says "x" and press "Enter" you'll create a length input for your function.
      6:
        image: "notes/stage15_6.jpg"
        text: 'Then click on the star. Now, you want to click on the variables category and drag the "length" block into the "move forward" block of your function definition. And drag away the old number block.'
      7:
        image: "notes/stage15_7.jpg"
        text: 'To use your function with parameters, click on the functions category and drag out your "draw a triangle with length" function.'
      8:
        image: "notes/stage15_8.jpg"
        text: "Now you can use the math block to input different numbers to draw triangles of different sizes."
    hoc_wrapup:
      1:
        image: "notes/hoc6_1.jpg"
        text: "Gratulerer! Med den siste oppgaven du løste, skrev du kode som kan fortelle roboter hvordan de finner vei gjennom enkle labyrinter eller tunneler uansett lengde. Dette gjelder uansett om det er en zombie, en fugl, en mars-rover eller om det er deg som kjører bil."
      2:
        image: "notes/hoc6_2.jpg"
        text: "De grunnleggende konseptene som du brukte, danner utgangspunktet for alle programmene eller appene du ser. Vi har lært om gjentagende løkker, hvis-setninger, og hvis-ellers setninger."
      3:
        image: "notes/hoc6_3.jpg"
        text: "Hvis du likte den første kodetimen, kan du gå til code.org for å fortsette å lære programmering! Når du har fullført 20-timers kurset vårt, behersker du grunnleggende programmering. Da kan du begynne å lære å skrive telefon-apper, robotinstruksjoner, spill - ja alt mulig!"
      4:
        image: "notes/hoc6_4.jpg"
        text: "Teknologien forandrer alt vi gjør, og det spiller ingen rolle om du er ung eller gammel: Programmering er morsomt og kreativt, og alle kan lære det!"
    20_wrapup:
      1:
        image: "notes/bird.png"
        text: "Video-notater kommer snart!"
