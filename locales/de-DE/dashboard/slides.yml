"de":
  slides:
    maze_intro:
      1:
        image: "notes/hoc1_1.jpg"
        text: "Willkommen zu deiner ersten Programmierstunde! Fangen wir gleich mit der ersten Übung an."
      2:
        image: "notes/hoc1_2.jpg"
        text: "Wir werden Blocky, eine Grafische Programmiersprache in der du mit Drag&Drop Bausteine setzt, benutzen um Programme zu schreiben."
      3:
        image: "notes/hoc1_3.jpg"
        text: 'Meistens werden Programme geschrieben, aber Blockly ist grafisch. Jeder Baustein entspricht einer Zeile "echten" Codes.'
      4:
        image: "notes/hoc1_4.jpg"
        text: "Du wirst die Grundlagen der Informatik lernen. Konzepte die überall genutzt werden, von erstellen von Apps bis zum Kontrollieren des Mars Rovers."
      5:
        image: "notes/hoc1_5.jpg"
        text: "Ein Programm ist eine Ansammlung von Anweisungen, die dein Computer befolgt."
      6:
        image: "notes/hoc1_6.jpg"
        text: "Das Ziel deines ersten Programmes ist es Angry Bird durch ein Laybrinth zum grünen Schwein zu führen."
      7:
        image: "notes/hoc1_7.jpg"
        text: "Die linke Seite ist das Labybrinth wo dein Programm ausgeführt wird. Die Anweisungen für jedes Puzzle findest du unter dem Laybrinth."
      8:
        image: "notes/hoc1_8.jpg"
        text: "Der mittlere Werkzeugkasten enthält die Befehlsbausteine für den Vogel. Verwende sie, um das Programm zu erstellen."
      9:
        image: "notes/hoc1_9.jpg"
        text: "Rechts ist der Arbeitsbereich, wo die Bausteine aus dem Werkzeugkasten zum Programm zusammengesteckt werden. Um einen Block zu löschen, ziehe ihn in den Papierkorb in der Ecke."
      10:
        image: "notes/hoc1_10.jpg"
        text: 'Jeder Baustein ist eine Anweisung. Wenn du einen "vorwärts bewegen"-Baustein auf deinen Arbeitsbereich ziehst und anschließend "Programm Starten" drückst, dann bewegt sich der Vogel im Labyrinth einen Schritt nach vorne.'
      11:
        image: "notes/hoc1_11.jpg"
        text: "Um mehr als eine Aktion zu auszuführen, kannst du viele Bausteine in den Arbeitsbereich ziehen und sie zusammenstecken. Der Vogel wird die Befehle von oben nach unten abarbeiten."
      12:
        image: "notes/hoc1_12.jpg"
        text: 'Wenn Du ein Programm reparieren und es nochmals versuchen möchtest, dann drücke den "Zurücksetzen" Knopf.'
      13:
        image: "notes/hoc1_13.jpg"
        text: "Holen wir die Schweine!"
    artist_intro:
      1:
        image: "notes/bird.png"
        text: "In Text Form anzeigen kommt bald!"
    farmer_intro:
      1:
        image: "notes/bird.png"
        text: "In Text Form anzeigen kommt bald!"
    loop_times:
      1:
        image: "notes/hoc2_1.jpg"
        text: "Hi, ich bin Mark! Lass uns etwas über Schleifen lernen. Wenn Du Schleifen verwendest, kannst du dem Computer befehlen, dass er jede beliebige Anweisung wieder und wieder, tausendmal oder sogar milliardenmal, wiederholen soll."
      2:
        image: "notes/hoc2_2.jpg"
        text: "In diesem Puzzle möchten wir, dass sich der Vogel 5 Schritte nach vorne zum Schwein bewegt."
      3:
        image: "notes/hoc2_3.jpg"
        text: 'Wir können den neuen "Wiederholen"-Block verwenden, um uns zu helfen.'
      4:
        image: "notes/hoc2_4.jpg"
        text: 'Anstatt 5 "vorwärts gehen"-Bausteine zu stapeln...'
      5:
        image: "notes/hoc2_5.jpg"
        text: 'Wir können den "vorwärts bewegen"-Baustein in einen "Wiederholen"-Baustein ziehen und eine Zahl im Baustein angeben, wie oft es wiederholt werden soll.'
      6:
        image: "notes/hoc2_6.jpg"
        text: 'Und wichtig: Man kann mehr als einen Baustein in einen "Wiederholen"-Baustein ziehen.'
      7:
        image: "notes/hoc2_7.jpg"
        text: 'Viel Spaß mit deinem neuen "Wiederholen" Baustein!'
    loop_until:
      1:
        image: "notes/hoc3_1.jpg"
        text: 'Hi, ich bin Chris. Bevor ich angefangen habe Basketball für das Team "Miami Heat" zu spielen, habe ich an der "Georgia Tech"-Universität Informatik studiert. Lass uns den neuen "Wiederholen bis"-Baustein ausprobieren.'
      2:
        image: "notes/hoc3_2.jpg"
        text: "Was wäre wenn wir nicht wüssten, wie weit sich der Vogel bewegen muss, um zum Schwein zu kommen?"
      3:
        image: "notes/hoc3_3.jpg"
        text: 'Wenn wir einen "vorwärts bewegen"-Baustein in den "Wiederholen bis"-Baustein setzen, wird sich der Vogel nach vorne bewegen BIS er bei einem Schwein ankommt (oder in eine Wand kracht).'
      4:
        image: "notes/hoc3_4.jpg"
        text: 'Und das ist wichtig: wie zuvor auch, können wir in den "wiederhole bis"-Baustein mehrere Bausteine setzten, die dann alle wiederholt werden.'
    if:
      1:
        image: "notes/hoc4_1.jpg"
        text: 'Hi, ich bin Bill! Lass uns ein neues, fundamentales Konzept lernen: Die "Wenn"-Anweisungen. Damit trifft der Computer Entscheidungen.'
      2:
        image: "notes/hoc4_2.jpg"
        text: 'Du benutzt "Wenn"-Anweisungen tagtäglich selbst. Zum Beispiel überlegst Du jeden Morgen bevor du aus dem Haus gehst: "Wenn" es regnet, muss ich meinen Regenmantel anziehen.'
      3:
        image: "notes/hoc4_3.jpg"
        text: "Wir können den Zombie anweisen zu überprüfen WENN es einen Weg nach links gibt und wenn er einen Weg nach links findet, dass er sich in diese Richtung drehen soll."
      4:
        image: "notes/hoc4_4.jpg"
        text: 'Um ein Programm dafür zu schreiben, ziehe zuerst unseren "Wenn"-Baustein heraus und setze danach einen "nach links drehen"-Baustein hinein.'
      5:
        image: "notes/hoc4_5.jpg"
        text: 'Wenn wir jetzt einen "gehe vorwärts"-Baustein darüber stapeln und um alles einen "Wiederholen"-Baustein legen, wird der Zombie bei jeder Bewegung prüfen, ob es einen Weg nach links gibt und sich in dem Fall drehen. Der "Wiederholen" Befehl ist wichtig, um bei jedem Schritt auf eine Drehmöglichkeit zu prüfen.'
      6:
        image: "notes/hoc4_6.jpg"
        text: "Wenn Anweisung sind in der Informatik wirklich wichtig. Eines meiner ersten Programme war Tic Tac Toe, und es gab eine Wenn Anweisung, die sagte, wenn die andere Person gewinnen sollte, blockiere das Feld, mit dem sie gewinnen kann."
      7:
        image: "notes/hoc4_7.jpg"
        text: 'Viel Spaß mit dem "Wenn"-Baustein!'
    if_else:
      1:
        image: "notes/hoc5_1.jpg"
        text: 'Hi, ich heiße Saloni. Ich verwende Informatik um Probleme im Gesundheits- und Medizinbereich zu lösen. Lass uns etwas über den "Wenn-Ansonsten"-Baustein lernen. Er sieht ähnlich wie ein "Wenn"-Baustein aus, aber er hat einen Zusatzteil am Ende der "Ansonsten" heißt.'
      2:
        image: "notes/hoc5_2.jpg"
        text: 'Wenn ich einen "gehe vorwärts"-Baustein, an der Stelle, wo es heißt "tun", und einen "drehe links"-Baustein, wo es heißt "sonst", setzte, kann der Zombie zwischen 2 Optionen wählen. Gibt es einen Weg geradeaus, bewegt sich der Zombie vorwärts. Gibt es ist keinen Weg geradeaus, dreht sich der Zombie nach links.'
      3:
        image: "notes/hoc5_3.jpg"
        text: 'Genau wie einen "Wenn"-Baustein, können wir einen "Wenn-Ansonsten"-Baustein in einen "Wiederholen"-Baustein setzen, so dass der Zombie sich weiter bewegt und der "Wenn-Ansonsten"-Baustein prüft, ob es einen Weg zum Drehen gibt.'
      4:
        image: "notes/hoc5_4.jpg"
        text: "Jetzt bewege die Zombies dahin, wo sie hingehören!"
    function:
      1:
        image: "notes/bird.png"
        text: "In Text Form anzeigen kommt bald!"
    loop_while:
      1:
        image: "notes/bird.png"
        text: "In Text Form anzeigen kommt bald!"
    loop_for:
      1:
        image: "notes/bird.png"
        text: "In Text Form anzeigen kommt bald!"
    parameters:
      1:
        image: "notes/bird.png"
        text: "In Text Form anzeigen kommt bald!"
    hoc_wrapup:
      1:
        image: "notes/hoc6_1.jpg"
        text: "Herzlichen Glückwunsch! Mit dem letzten Rätsel, das du gerade gelöst hast, hast du ein Prgramm geschrieben, das JEDER Roboter dazu verwenden kann, um seinen Weg durch nicht-verzweigte Labyrinthe oder Tunnel aller Längen zu finden. Ganz egal ob es ein Zombie, ein Vogel, ein Mars-Rover, oder sogar ein selbstfahrendes Auto ist."
      2:
        image: "notes/hoc6_2.jpg"
        text: "Die grundlegenden Konzepte, die du verwendet hast, sind das Herzstück jedes Programms. Wir haben etwas über Schleifen, Wiederholungen, Wenn-Dann-Befehle und Wenn-Ansonsten gelernt."
      3:
        image: "notes/hoc6_3.jpg"
        text: "Wenn Dir die ersten Stunden Programmieren gefallen haben, dann besuche code.org, um Deine Ausbildung in der Informatik fortzuführen! Sobald Du unseren 20 Stunden-Kurs abgeschlossen hast, hast Du die Grundlagen des Programmieren gemeistert und kannst anfangen zu lernen wie man Handy-Apps, Roboter-Anweisungen, Spiele, oder was immer Du möchtest, programmiert."
      4:
        image: "notes/hoc6_4.jpg"
        text: "Technologie verändert alles was wir tun und es ist egal ob du jung oder alt bist: Programmieren macht Spaß, es ist kreativ, und jeder kann es lernen!"
    20_wrapup:
      1:
        image: "notes/bird.png"
        text: "In Text Form anzeigen kommt bald!"
