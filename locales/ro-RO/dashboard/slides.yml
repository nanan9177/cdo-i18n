"ro":
  slides:
    maze_intro:
      1:
        image: "notes/hoc1_1.jpg"
        text: "Bine ai venit la prima ta oră de cod! Hai să pătrundem direct în prima ta încercare de programare."
      2:
        image: "notes/hoc1_2.jpg"
        text: "Vom folosi Blockly, un limbaj de programare vizuală, în care muți cu drag și drop blocuri pentru a scrie un cod."
      3:
        image: "notes/hoc1_3.jpg"
        text: 'Majoritatea codului e scris cu tastatura, dar Blockly e vizual. Fiecare bloc corespunde unei linii de cod "real".'
      4:
        image: "notes/hoc1_4.jpg"
        text: "Vei învăța bazele informaticii, concepte care sunt folosite în orice domeniu de la crearea de aplicații până la controlul roboților trimiși pe Marte. "
      5:
        image: "notes/hoc1_5.jpg"
        text: "Un program este un set de instrucțiuni pe care calculatorul tău să le urmeze."
      6:
        image: "notes/hoc1_6.jpg"
        text: "Scopul primului tău program este să lovești un Porcușor Verde cu o Pasare Furioasă printr-un labirint."
      7:
        image: "notes/hoc1_7.jpg"
        text: "Partea stângă este labirintul în care programul se execută. Instrucțiunile pentru fiecare puzzle se găsesc sub labirint."
      8:
        image: "notes/hoc1_8.jpg"
        text: "Cutia de instrumente din mijloc conține comenzile pentru Pasărea Furioasă. Le vei utiliza pe acestea pentru a-ți construi codul."
      9:
        image: "notes/hoc1_9.jpg"
        text: "În dreapta este spațiul tău de lucru unde vei trage blocuri din cutia de instrumente pentru a îți construi programul. Ca să ștergi un bloc trage-l la gunoi în colț."
      10:
        image: "notes/hoc1_10.jpg"
        text: 'Fiecare bloc este o instrucție. Dacă tragi un bloc de tip "mută înainte" către spațiul tău de lucru și apeși pe "Execută Programul" pasărea se mută cu un spațiu pe labirint.'
      11:
        image: "notes/hoc1_11.jpg"
        text: "Ca să execuți mai mult de o mișcare, poți trage mai multe blocuri în spațiul tău de lucru și să le atașezi împreună. Pasărea va executa comezile de sus în jos."
      12:
        image: "notes/hoc1_12.jpg"
        text: 'Dacă rulezi un program și vrei să îl repari pentru ca apoi să-l încerci din nou, apasă pe butonul "Reset".'
      13:
        image: "notes/hoc1_13.jpg"
        text: "Hai să prindem porcii!"
    artist_intro:
      1:
        image: "notes/stage5_1.jpg"
        text: "Bună, eu sunt JR! Fiecare echipa de cursă auto are nevoie de informaticieni pentru a câştiga. Ei analizează datele din maşină pentru a o face să meargă mai repede."
      2:
        image: "notes/stage5_2.jpg"
        text: "In these puzzles, you'll be an artist that draws a line behind them everywhere they go."
      3:
        image: "notes/stage5_3.jpg"
        text: 'This block says "move forward by 100 pixels." Pixels are just really tiny dots on your screen.'
      4:
        image: "notes/stage5_4.jpg"
        text: 'This block says "turn right by 90 degrees." This will turn your artist the same amount as the "turn" blocks in the maze puzzles.'
      5:
        image: "notes/stage5_5.jpg"
        text: "Click on the arrow in either of these blocks to change the amount the artist moves forward or turns. Play around to get familiar with these new blocks."
    farmer_intro:
      1:
        image: "notes/stage9_1.jpg"
        text: "Hi, I'm Paola! In these puzzles, you're a farmer who has to get her field completely flat to start planting crops."
      2:
        image: "notes/stage9_2.jpg"
        text: "You have to help her remove all the piles of dirt and fill in all the holes."
      3:
        image: "notes/stage9_3.jpg"
        text: "The new blocks remove 1 shovelful of dirt from a pile and fill in 1 shoveful of dirt to a hole."
      4:
        image: "notes/stage9_4.jpg"
        text: "The piles and holes are different sizes, so you have to tell the farmer how many shovelfuls to use."
    loop_times:
      1:
        image: "notes/hoc2_1.jpg"
        text: "Salut, sunt Mark! Hai să învățăm despre bucle. Folosind bucle îi poți spune unui computer să repete orice set de acțiuni din nou și din nou, de mii sau chiar de miliarde de ori."
      2:
        image: "notes/hoc2_2.jpg"
        text: "În acest puzzle, vrem să facem pasărea să se mute înainte 5 spații pentru a ajunge la porcușor."
      3:
        image: "notes/hoc2_3.jpg"
        text: 'Putem să folosim noul bloc "repetă" ca să ne ajute.'
      4:
        image: "notes/hoc2_4.jpg"
        text: 'În loc să tragem 5 blocuri de tip "mută înainte"...'
      5:
        image: "notes/hoc2_5.jpg"
        text: 'Putem să așezăm blocul "mută înainte" în interiorul blocului "repetă" și să scriem un număr în bloc ca să îi spunem de câte ori să repete acțiunea.'
      6:
        image: "notes/hoc2_6.jpg"
        text: 'Și asta este important: poți să pui mai mult de o singură comandă în interiorul unui bloc "repetă".'
      7:
        image: "notes/hoc2_7.jpg"
        text: 'Bucurați-vă de folosirea noului bloc "repetă"!'
    loop_until:
      1:
        image: "notes/hoc3_1.jpg"
        text: 'Salut, sunt Chris. Înainte să intru la Miami Heat, am fost la Georgia Tech ca să invăţ informatică. Să încercăm noul nostru bloc, blocul "repetaţi până când".'
      2:
        image: "notes/hoc3_2.jpg"
        text: "Cum ar fi dacă nu am ști cât de departe trebuie pasărea să se mute pentru a ajunge la porcușor?"
      3:
        image: "notes/hoc3_3.jpg"
        text: 'Dacă punem un bloc "mută înainte" în interiorul blocului "repetă până", pasărea se va muta înainte PÂNĂ va ajunge la porcușor (sau se lovește de un perete).'
      4:
        image: "notes/hoc3_4.jpg"
        text: 'Şi asta este important: la fel ca înainte, putem pune mai multe blocuri înăuntrul blocului "repetă până când" şi toate se vor repeta.'
    if:
      1:
        image: "notes/hoc4_1.jpg"
        text: 'Salut, sunt Bill! Hai să învățăm un nou concept fundamental: Afirmațile de tip "Dacă." Acesta este felul în care computerele iau decizii.'
      2:
        image: "notes/hoc4_2.jpg"
        text: 'Voi utilizați afirmații de tip "Dacă" în fiecare zi. Înainte să mergi afară în fiecare dimineață spui că DACĂ plouă afară, am nevoie să port o geacă.'
      3:
        image: "notes/hoc4_3.jpg"
        text: "Putem să-i spunem zombie-ului să verifice DACĂ este o cale către stânga, și dacă găsește o cale către stânga, putem să îl îndreptăm în acea direcție."
      4:
        image: "notes/hoc4_4.jpg"
        text: 'Ca să scriem codul pentru asta, hai să scoatem afară blocul nostru "dacă" și să punem un bloc "întoarce la stânga" în interiorul său.'
      5:
        image: "notes/hoc4_5.jpg"
        text: 'Acum, dacă punem un bloc "mută înainte" deasupra lui și un bloc "repetă" în jurul tuturor obiectelor, de fiecare dată când un zombie se va mișca, va verifica dacă este o cale către stânga și se va întoarce.  Comanda "repetă" este critică, ca să verifice dacă există o cale alternativă la fiecare pas.'
      6:
        image: "notes/hoc4_6.jpg"
        text: 'Afirmațiile de tip dacă sunt foarte importante în informatică. Unul din primele programe pe care le-am scris a fost un joc x și 0, și exista o afirmație de tipul "dacă", care spunea în felul următor programului de execuție : Dacă adversarul este pe cale să câștige, blochează locul care îi va permite să câștige.'
      7:
        image: "notes/hoc4_7.jpg"
        text: 'Distrează-te folosind blocul "dacă"!'
    if_else:
      1:
        image: "notes/hoc5_1.jpg"
        text: 'Salut, numele meu este Saloni. Eu folosesc informatica să pot ajuta și găsi soluții în medicină și sănătate. Hai să învățăm  despre blocul "dacă altul". Arată ca blocul "dacă", dar are o parte în plus la sfârșit care spune "altfel".'
      2:
        image: "notes/hoc5_2.jpg"
        text: 'Dacă pun un bloc "mută înainte" în locul unde spune "execută" și un bloc "ia-o la stânga" unde spune "altfel" asta înseamnă că zombie-ul va alege între 2 opțiuni. DACĂ există o cale în față, zombie-ul se va mișca înainte, și ALTFEL (nu există o cale înainte), zombie-ul se va întoarce la stânga.'
      3:
        image: "notes/hoc5_3.jpg"
        text: 'Asemenea blocului "dacă", putem pune blocuri "dacă altfel" în interiorul unui bloc "repetă" astfel încât zombie-ul să continue să se deplaseze și blocul "dacă altfel" va continua să verifice dacă are unde să cotească. '
      4:
        image: "notes/hoc5_4.jpg"
        text: "Acum , condu-i pe zombie unde le este locul!"
    function:
      1:
        image: "notes/stage13_1.jpg"
        text: "Hi, I'm Brina, an engineer at Instagram. A function is certain lines of code that you want to use over and over again, so instead of writing that code out everytime, you can just use one block."
      2:
        image: "notes/stage13_2.jpg"
        text: "We're going to learn how to define functions. Function definitions have a star in the corner. The name of the function is written on the top line."
      3:
        image: "notes/stage13_3.jpg"
        text: |-
          The blocks that go inside the definition tell us what it does. So this function definition is called "fill 5" and it's made up of a "repeat" block and a "fill" block.
      4:
        image: "notes/stage13_4.jpg"
        text: |-
          The definition sits on the workspace, but our farmer won't run the function until we drag out our "fill 5 function" block from functions category.
      5:
        image: "notes/stage13_5.jpg"
        text: |-
          Let's put the "fun" back in "FUNction!"
    loop_while:
      1:
        image: "notes/stage9_5.jpg"
        text: |-
          Hi, I'm Makinde! Let's learn about the "while block."
      2:
        image: "notes/stage9_6.jpg"
        text: 'The "while block" will do whatever you put inside it AS LONG AS the statment on the top is TRUE.'
      3:
        image: "notes/stage9_7.jpg"
        text: "For example, if the farmer is standing on a pile, she will continue to remove 1 shoveful WHILE there is still a pile beneath her."
    loop_for:
      1:
        image: "notes/stage11_1.jpg"
        text: "Hi, I'm Trina, and I work for Pixar. I've worked on a bunch of movies, including Shrek."
      2:
        image: "notes/stage11_2.jpg"
        text: 'This is our new "counter" loop. It will perform actions over and over again and you can make the actions change slightly each time.'
      3:
        image: "notes/stage11_3.jpg"
        text: 'In this example, our "counter" loop says "count with counter from 50 to 90 by 10" and inside it, we have our "draw a square" block. Drag the "counter" block from the "Variables" section into the "length" spot.'
      4:
        image: "notes/stage11_4.jpg"
        text: "This means our artist is going to draw a square that has 50 pixel length sides, then it will add 10 to that and draw a square with 60 pixel length sides. Then it will keep adding 10 and drawing squares until it reaches 90. So we'll have squares of 50, 60, 70, 80, and 90."
    parameters:
      1:
        image: "notes/stage15_1.jpg"
        text: "Hi, I'm Janete, and I'm an engineer at Zynga."
      2:
        image: "notes/stage15_2.jpg"
        text: "What if we want to draw a bunch of triangles and have their lengths be different sizes?"
      3:
        image: "notes/stage15_3.jpg"
        text: "We could write all that code out by hand or we can use a function with parameters."
      4:
        image: "notes/stage15_4.jpg"
        text: 'To do this, click the blue star on the "draw a triangle" function definition. Then drag "input name" into the "input" block.'
      5:
        image: "notes/stage15_5.jpg"
        text: |-
          Then if you write "length" in the spot where it says "x" and press "Enter" you'll create a length input for your function.
      6:
        image: "notes/stage15_6.jpg"
        text: 'Then click on the star. Now, you want to click on the variables category and drag the "length" block into the "move forward" block of your function definition. And drag away the old number block.'
      7:
        image: "notes/stage15_7.jpg"
        text: 'To use your function with parameters, click on the functions category and drag out your "draw a triangle with length" function.'
      8:
        image: "notes/stage15_8.jpg"
        text: "Now you can use the math block to input different numbers to draw triangles of different sizes."
    hoc_wrapup:
      1:
        image: "notes/hoc6_1.jpg"
        text: "Felicitări! Cu ultimul puzzle pe care l-ai rezolvat, tocmai ai scris un cod ce poate spune ORICĂRUI robot cum să-și găsească drumul printr-un labirint fără ramificații sau un tunel de orice lungime , fie că e un zombie, o pasăre, un  robot de misune pe marte, sau chiar o mașină ce se conduce singură."
      2:
        image: "notes/hoc6_2.jpg"
        text: 'Conceptele de bază pe care le-ai folosit sunt inima oricărui program sau aplicație pe care le vei încerca. Am învățat despre bucle care se repetă, afirmații de tipul "repetă până la", și afirmații de tipul dacă/altfel.'
      3:
        image: "notes/hoc6_3.jpg"
        text: "Dacă ți-a plăcut prima ta oră de cod, vizitează code.org pentru a-ți continua educația în informatică! Când vei termina cursul nostru de 20 de ore, vei stăpâni bazele programării, și vei putea să înveți cum să scrii aplicații de telefon, instrucțiuni de roboți, jocuri, tu alegi."
      4:
        image: "notes/hoc6_4.jpg"
        text: "Tehnologia schimbă tot ceea ce facem și nu contează dacă ești tânăr sau bătrân: programarea e distractivă, e creativă și oricine o poate învăța!"
    20_wrapup:
      1:
        image: "notes/bird.png"
        text: "Arată notițele care vor apărea în curând!"
